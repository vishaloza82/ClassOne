@model ClassOne.Models.TeacherRegistration
@{
    ViewBag.Title = "Class One Registration";
}



@*<h2>Registration</h2>*@
@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group-lg">
                
                <div class="col-md-10 DivPadding">
                   @Html.LabelFor(model => model.SchoolId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <!-- @Html.DropDownListFor(model => model.SchoolId, Model.SchoolList, htmlAttributes: new { @class = "form-control TextBoxRegister col-md-7" }) -->
                    
                    @Html.DropDownList("SchoolId", Model.SchoolList, htmlAttributes: new { @class = "form-control  TextBoxRegister col-md-7" })
                    @Html.ValidationMessageFor(m => m.SchoolId)
                </div>  
            </div>
            <div></div>
            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.LabelFor(model => model.SalutationId, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.DropDownList("SalutationId", Model.Salutation, htmlAttributes: new { @class = "form-control TextBoxRegister col-md-3" })
                    @Html.ValidationMessageFor(model => model.SalutationId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control TextBoxRegister col-md-6" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                
            </div>
            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control TextBoxRegister col-md-6" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
               
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control TextBoxRegister col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control TextBoxRegister col-md-6" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control TextBoxRegister col-md-6" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                
                <div class="col-md-10">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control TextBoxRegister col-md-6" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="DivAlign col-md-5">
                    <input type="submit" value="Register" class="btn btn-default" />
                </div>
                <div class="ActionLinkAlign col-md-5">
                    @Html.ActionLink("Already Registered? Signin", "Login")
                </div>
            </div>
        </div>
        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }
}

<div>
  
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
@*@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}*@




