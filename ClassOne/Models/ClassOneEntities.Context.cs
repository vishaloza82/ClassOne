//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassOne.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClassOneEntities : DbContext
    {
        public ClassOneEntities()
            : base("name=ClassOneEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AboutU> AboutUs { get; set; }
        public virtual DbSet<Add_To_Cart> Add_To_Cart { get; set; }
        public virtual DbSet<Age> Ages { get; set; }
        public virtual DbSet<AppRelease> AppReleases { get; set; }
        public virtual DbSet<Backend_Login_Details> Backend_Login_Details { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<BaseData> BaseDatas { get; set; }
        public virtual DbSet<Board> Boards { get; set; }
        public virtual DbSet<Board_Mapping_Standard> Board_Mapping_Standard { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Cart_Paackage_Mapping_Product> Cart_Paackage_Mapping_Product { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Category_Mapping_SubCategory> Category_Mapping_SubCategory { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Class_one_subjects> Class_one_subjects { get; set; }
        public virtual DbSet<Class1Roles> Class1Roles { get; set; }
        public virtual DbSet<COD_Payment_Details> COD_Payment_Details { get; set; }
        public virtual DbSet<ContactUsDetail> ContactUsDetails { get; set; }
        public virtual DbSet<ContactUsIssue> ContactUsIssues { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Coupon> Coupons { get; set; }
        public virtual DbSet<Coupon_Mapping_Order> Coupon_Mapping_Order { get; set; }
        public virtual DbSet<Coupon1> Coupons1 { get; set; }
        public virtual DbSet<CouponTry> CouponTries { get; set; }
        public virtual DbSet<CouponType> CouponTypes { get; set; }
        public virtual DbSet<Courier_Company_Name> Courier_Company_Name { get; set; }
        public virtual DbSet<Courier_Mapping_RunnerBoy> Courier_Mapping_RunnerBoy { get; set; }
        public virtual DbSet<CourierBankDetail> CourierBankDetails { get; set; }
        public virtual DbSet<CourierLogin> CourierLogins { get; set; }
        public virtual DbSet<Courier> Couriers { get; set; }
        public virtual DbSet<Customer_Address> Customer_Address { get; set; }
        public virtual DbSet<Customer_Coupon> Customer_Coupon { get; set; }
        public virtual DbSet<Customer_Feedback> Customer_Feedback { get; set; }
        public virtual DbSet<Customer_Mapping_Category_Mapping_Filter_Selection> Customer_Mapping_Category_Mapping_Filter_Selection { get; set; }
        public virtual DbSet<Customer_Mapping_OTP> Customer_Mapping_OTP { get; set; }
        public virtual DbSet<Customer_Mapping_Scholarshippoints> Customer_Mapping_Scholarshippoints { get; set; }
        public virtual DbSet<Customer_Mapping_School> Customer_Mapping_School { get; set; }
        public virtual DbSet<Customer_Package_Feedback_Rating> Customer_Package_Feedback_Rating { get; set; }
        public virtual DbSet<Customer_Product_Rating> Customer_Product_Rating { get; set; }
        public virtual DbSet<Customer_Replacement_Order> Customer_Replacement_Order { get; set; }
        public virtual DbSet<Customer_WishList> Customer_WishList { get; set; }
        public virtual DbSet<CustomerAnnotation> CustomerAnnotations { get; set; }
        public virtual DbSet<CustomerMappingStudent> CustomerMappingStudents { get; set; }
        public virtual DbSet<CustomerOrder_Mapping_OrderStatus> CustomerOrder_Mapping_OrderStatus { get; set; }
        public virtual DbSet<CustomerOrder_Mapping_ShippingStatus> CustomerOrder_Mapping_ShippingStatus { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Customers_Login> Customers_Login { get; set; }
        public virtual DbSet<CustomerSM> CustomerSMS { get; set; }
        public virtual DbSet<Delivery_Feedback> Delivery_Feedback { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<FAQ> FAQs { get; set; }
        public virtual DbSet<FCM_Token> FCM_Token { get; set; }
        public virtual DbSet<General_Specification> General_Specification { get; set; }
        public virtual DbSet<HomePageContent> HomePageContents { get; set; }
        public virtual DbSet<HomePageContentMappingContent> HomePageContentMappingContents { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<LandingBanner> LandingBanners { get; set; }
        public virtual DbSet<Legal> Legals { get; set; }
        public virtual DbSet<Legal_And_Information> Legal_And_Information { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NotificationType> NotificationTypes { get; set; }
        public virtual DbSet<Order_Image> Order_Image { get; set; }
        public virtual DbSet<Order_Logistics_Delivery_Status> Order_Logistics_Delivery_Status { get; set; }
        public virtual DbSet<Order_Mapping_Courier> Order_Mapping_Courier { get; set; }
        public virtual DbSet<Order_Mapping_Payment_Transaction_Details> Order_Mapping_Payment_Transaction_Details { get; set; }
        public virtual DbSet<Order_Mapping_RunnerBoy> Order_Mapping_RunnerBoy { get; set; }
        public virtual DbSet<Order_Mapping_Tracking_Number> Order_Mapping_Tracking_Number { get; set; }
        public virtual DbSet<Order_Mapping_Transaction> Order_Mapping_Transaction { get; set; }
        public virtual DbSet<Order_Mapping_Undelivered_Reason> Order_Mapping_Undelivered_Reason { get; set; }
        public virtual DbSet<Order_Payment_Mode> Order_Payment_Mode { get; set; }
        public virtual DbSet<Order_Price> Order_Price { get; set; }
        public virtual DbSet<Order_Replacement> Order_Replacement { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Orders_Mapping_Product_Package> Orders_Mapping_Product_Package { get; set; }
        public virtual DbSet<Orders_Mapping_Product_Package_Mapping_Products> Orders_Mapping_Product_Package_Mapping_Products { get; set; }
        public virtual DbSet<OrderStatu> OrderStatus { get; set; }
        public virtual DbSet<OrderStatusHistory> OrderStatusHistories { get; set; }
        public virtual DbSet<Package_Commission_Supplier> Package_Commission_Supplier { get; set; }
        public virtual DbSet<Package_Discount> Package_Discount { get; set; }
        public virtual DbSet<Package_Highlights> Package_Highlights { get; set; }
        public virtual DbSet<Package_Images> Package_Images { get; set; }
        public virtual DbSet<Package_Inventory_Mapping_Supplier_Mapping_School> Package_Inventory_Mapping_Supplier_Mapping_School { get; set; }
        public virtual DbSet<Package_Mapping_Board> Package_Mapping_Board { get; set; }
        public virtual DbSet<Package_Mapping_BoardStandard> Package_Mapping_BoardStandard { get; set; }
        public virtual DbSet<Package_Mapping_Products> Package_Mapping_Products { get; set; }
        public virtual DbSet<Package_Mapping_School> Package_Mapping_School { get; set; }
        public virtual DbSet<Package_Mapping_SchoolBoardStandard> Package_Mapping_SchoolBoardStandard { get; set; }
        public virtual DbSet<Package_Mapping_ShippingCost> Package_Mapping_ShippingCost { get; set; }
        public virtual DbSet<Package_Mapping_Standard> Package_Mapping_Standard { get; set; }
        public virtual DbSet<Package_Of_Package> Package_Of_Package { get; set; }
        public virtual DbSet<Package_Of_Package_Mapping_Package> Package_Of_Package_Mapping_Package { get; set; }
        public virtual DbSet<Package> Packages { get; set; }
        public virtual DbSet<Payment_Format> Payment_Format { get; set; }
        public virtual DbSet<Payment_Format_Mapping_Package> Payment_Format_Mapping_Package { get; set; }
        public virtual DbSet<Payment_Format_Mapping_School> Payment_Format_Mapping_School { get; set; }
        public virtual DbSet<Payment_Status> Payment_Status { get; set; }
        public virtual DbSet<PinCode> PinCodes { get; set; }
        public virtual DbSet<PreallocatedAwbno> PreallocatedAwbnoes { get; set; }
        public virtual DbSet<PrivacyPolicy> PrivacyPolicies { get; set; }
        public virtual DbSet<Product_Commission_Supplier> Product_Commission_Supplier { get; set; }
        public virtual DbSet<Product_Discount> Product_Discount { get; set; }
        public virtual DbSet<Product_Highlights> Product_Highlights { get; set; }
        public virtual DbSet<Product_History> Product_History { get; set; }
        public virtual DbSet<Product_Images> Product_Images { get; set; }
        public virtual DbSet<Product_Mapping_Board> Product_Mapping_Board { get; set; }
        public virtual DbSet<Product_Mapping_BoardStandard> Product_Mapping_BoardStandard { get; set; }
        public virtual DbSet<Product_Mapping_CateogoryMappingSubCategory> Product_Mapping_CateogoryMappingSubCategory { get; set; }
        public virtual DbSet<Product_Mapping_GeneralSpecification> Product_Mapping_GeneralSpecification { get; set; }
        public virtual DbSet<Product_Mapping_School> Product_Mapping_School { get; set; }
        public virtual DbSet<Product_Mapping_Standard> Product_Mapping_Standard { get; set; }
        public virtual DbSet<Product_Mapping_Suppliers> Product_Mapping_Suppliers { get; set; }
        public virtual DbSet<Product_Mapping_Suppliers_SKUCode> Product_Mapping_Suppliers_SKUCode { get; set; }
        public virtual DbSet<Product_Taxation> Product_Taxation { get; set; }
        public virtual DbSet<Product_Type> Product_Type { get; set; }
        public virtual DbSet<ProductPriceRange> ProductPriceRanges { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Publisher_Mapping_Brand> Publisher_Mapping_Brand { get; set; }
        public virtual DbSet<Reedem_Products_Shipping_Charges> Reedem_Products_Shipping_Charges { get; set; }
        public virtual DbSet<Refund> Refunds { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Role1> Roles1 { get; set; }
        public virtual DbSet<ScholarshipContent> ScholarshipContents { get; set; }
        public virtual DbSet<ScholarshipPoint> ScholarshipPoints { get; set; }
        public virtual DbSet<ScholarshipPointDonationCertificateType> ScholarshipPointDonationCertificateTypes { get; set; }
        public virtual DbSet<ScholarshipPointRange> ScholarshipPointRanges { get; set; }
        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<School_Format_Mapping_School> School_Format_Mapping_School { get; set; }
        public virtual DbSet<School_Mapping_Board> School_Mapping_Board { get; set; }
        public virtual DbSet<School_Mapping_Package_Of_Package> School_Mapping_Package_Of_Package { get; set; }
        public virtual DbSet<School_Mapping_ShippingCharges> School_Mapping_ShippingCharges { get; set; }
        public virtual DbSet<School_Mapping_Standards> School_Mapping_Standards { get; set; }
        public virtual DbSet<School_Mapping_Supplier_Mapping_Settelment> School_Mapping_Supplier_Mapping_Settelment { get; set; }
        public virtual DbSet<SchoolBoard_Mapping_Standard> SchoolBoard_Mapping_Standard { get; set; }
        public virtual DbSet<SchoolModel> SchoolModels { get; set; }
        public virtual DbSet<SchoolStoreBranch> SchoolStoreBranches { get; set; }
        public virtual DbSet<SchoolStoreDonationCertificate> SchoolStoreDonationCertificates { get; set; }
        public virtual DbSet<SchoolStorePoint> SchoolStorePoints { get; set; }
        public virtual DbSet<SchoolStuffDonation> SchoolStuffDonations { get; set; }
        public virtual DbSet<Semester> Semesters { get; set; }
        public virtual DbSet<ShippingCharge_Mapping_Supplier> ShippingCharge_Mapping_Supplier { get; set; }
        public virtual DbSet<ShippingCharge> ShippingCharges { get; set; }
        public virtual DbSet<ShippingStatu> ShippingStatus { get; set; }
        public virtual DbSet<SMS_Template> SMS_Template { get; set; }
        public virtual DbSet<Standard> Standards { get; set; }
        public virtual DbSet<Standard_Mapping_Package_Of_Package> Standard_Mapping_Package_Of_Package { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Status_Assign_Task> Status_Assign_Task { get; set; }
        public virtual DbSet<Student_Mapping_Product> Student_Mapping_Product { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Students_Login> Students_Login { get; set; }
        public virtual DbSet<SubCategory> SubCategories { get; set; }
        public virtual DbSet<SubCategory_Mapping_GeneralSpecification> SubCategory_Mapping_GeneralSpecification { get; set; }
        public virtual DbSet<SubjectMappingStandard> SubjectMappingStandards { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<SubVendor> SubVendors { get; set; }
        public virtual DbSet<SubVendorMappingCategory> SubVendorMappingCategories { get; set; }
        public virtual DbSet<Supervisor_Mapping_School> Supervisor_Mapping_School { get; set; }
        public virtual DbSet<Supplier_Emails> Supplier_Emails { get; set; }
        public virtual DbSet<Supplier_Mapping_BannerImage> Supplier_Mapping_BannerImage { get; set; }
        public virtual DbSet<Supplier_Mapping_Standard> Supplier_Mapping_Standard { get; set; }
        public virtual DbSet<SupplierContactNumber> SupplierContactNumbers { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<Suppliers_Login> Suppliers_Login { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tax> Taxes { get; set; }
        public virtual DbSet<Tax_History> Tax_History { get; set; }
        public virtual DbSet<Tax_Type> Tax_Type { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<TeacherMaster> TeacherMasters { get; set; }
        public virtual DbSet<Teachers_Login> Teachers_Login { get; set; }
        public virtual DbSet<TempInventory> TempInventories { get; set; }
        public virtual DbSet<TempRating> TempRatings { get; set; }
        public virtual DbSet<TermsCondtion> TermsCondtions { get; set; }
        public virtual DbSet<TicketCategory> TicketCategories { get; set; }
        public virtual DbSet<TicketComment> TicketComments { get; set; }
        public virtual DbSet<TicketPriority> TicketPriorities { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<TicketSource> TicketSources { get; set; }
        public virtual DbSet<TicketStatu> TicketStatus { get; set; }
        public virtual DbSet<Undelivered_Reason> Undelivered_Reason { get; set; }
        public virtual DbSet<User_OTP_Details> User_OTP_Details { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<VXpressStatu> VXpressStatus { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<Year> Years { get; set; }
        public virtual DbSet<Category_Mapping_Brands> Category_Mapping_Brands { get; set; }
        public virtual DbSet<Class1_StuRegistration> Class1_StuRegistration { get; set; }
        public virtual DbSet<OrderAddress> OrderAddresses { get; set; }
        public virtual DbSet<PaynimoPaymentSuccessDetail> PaynimoPaymentSuccessDetails { get; set; }
        public virtual DbSet<School_Format> School_Format { get; set; }
        public virtual DbSet<TeacherGradeMapping> TeacherGradeMappings { get; set; }
        public virtual DbSet<TriggerFireLog> TriggerFireLogs { get; set; }
    
        [DbFunction("ClassOneEntities", "GetSpecification")]
        public virtual IQueryable<GetSpecification_Result> GetSpecification(Nullable<int> product)
        {
            var productParameter = product.HasValue ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSpecification_Result>("[ClassOneEntities].[GetSpecification](@product)", productParameter);
        }
    
        [DbFunction("ClassOneEntities", "ProductImages")]
        public virtual IQueryable<ProductImages_Result> ProductImages(Nullable<int> product)
        {
            var productParameter = product.HasValue ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductImages_Result>("[ClassOneEntities].[ProductImages](@product)", productParameter);
        }
    
        [DbFunction("ClassOneEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[ClassOneEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<string> AddCustOrderDetails(Nullable<int> customerId, string firstName, string lastName, string mobileNumber, string streetAddress, string landmark, Nullable<int> cityId, Nullable<int> stateId, Nullable<int> countryId, string pincode, Nullable<bool> isDefault)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var landmarkParameter = landmark != null ?
                new ObjectParameter("Landmark", landmark) :
                new ObjectParameter("Landmark", typeof(string));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var isDefaultParameter = isDefault.HasValue ?
                new ObjectParameter("IsDefault", isDefault) :
                new ObjectParameter("IsDefault", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AddCustOrderDetails", customerIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, streetAddressParameter, landmarkParameter, cityIdParameter, stateIdParameter, countryIdParameter, pincodeParameter, isDefaultParameter);
        }
    
        public virtual ObjectResult<string> AddToCart(Nullable<int> productid, Nullable<int> packageid, Nullable<int> customerid, Nullable<int> quantity)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("Packageid", packageid) :
                new ObjectParameter("Packageid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("Customerid", customerid) :
                new ObjectParameter("Customerid", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AddToCart", productidParameter, packageidParameter, customeridParameter, quantityParameter);
        }
    
        public virtual ObjectResult<AddWishList_Result> AddWishList(Nullable<int> productid, Nullable<int> packageid, Nullable<int> customerid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddWishList_Result>("AddWishList", productidParameter, packageidParameter, customeridParameter);
        }
    
        public virtual ObjectResult<string> CancelOrder(Nullable<int> orderid)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CancelOrder", orderidParameter);
        }
    
        public virtual ObjectResult<string> ChangePassword(Nullable<int> customerId, string oldPassword, string newPassword)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ChangePassword", customerIdParameter, oldPasswordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<string> CheckAccountExist(string mobileNumber, string email, string type)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckAccountExist", mobileNumberParameter, emailParameter, typeParameter);
        }
    
        public virtual int CheckPinCode(string pinCode)
        {
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckPinCode", pinCodeParameter);
        }
    
        public virtual int CheckShippingPrice(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckShippingPrice", customeridParameter);
        }
    
        public virtual int CheckShippingPricePackage(Nullable<int> packageid)
        {
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckShippingPricePackage", packageidParameter);
        }
    
        public virtual ObjectResult<CheckShippingPriceProduct_Result> CheckShippingPriceProduct(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckShippingPriceProduct_Result>("CheckShippingPriceProduct", productidParameter);
        }
    
        public virtual ObjectResult<string> CourierCheckAccountExist(string mobileNumber, string email, string type)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CourierCheckAccountExist", mobileNumberParameter, emailParameter, typeParameter);
        }
    
        public virtual ObjectResult<string> DeleteCustAddressDetails(Nullable<int> customerAddressId)
        {
            var customerAddressIdParameter = customerAddressId.HasValue ?
                new ObjectParameter("CustomerAddressId", customerAddressId) :
                new ObjectParameter("CustomerAddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteCustAddressDetails", customerAddressIdParameter);
        }
    
        public virtual ObjectResult<string> DeleteCustOrderDetails(Nullable<int> customerAddressId)
        {
            var customerAddressIdParameter = customerAddressId.HasValue ?
                new ObjectParameter("CustomerAddressId", customerAddressId) :
                new ObjectParameter("CustomerAddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteCustOrderDetails", customerAddressIdParameter);
        }
    
        public virtual ObjectResult<string> DeleteFromCart(Nullable<int> productid, Nullable<int> customerid, Nullable<int> packageid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteFromCart", productidParameter, customeridParameter, packageidParameter);
        }
    
        public virtual ObjectResult<string> DeleteWishList(Nullable<int> productid, Nullable<int> packageid, Nullable<int> customerid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteWishList", productidParameter, packageidParameter, customeridParameter);
        }
    
        public virtual ObjectResult<string> DonateScholarShipPoints(Nullable<int> customerId, Nullable<int> points)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("Points", points) :
                new ObjectParameter("Points", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DonateScholarShipPoints", customerIdParameter, pointsParameter);
        }
    
        public virtual ObjectResult<string> EditRegistration(Nullable<int> customerId, string firstName, string lastName, string emailId, string mobileNumber, string profilePic)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var profilePicParameter = profilePic != null ?
                new ObjectParameter("ProfilePic", profilePic) :
                new ObjectParameter("ProfilePic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("EditRegistration", customerIdParameter, firstNameParameter, lastNameParameter, emailIdParameter, mobileNumberParameter, profilePicParameter);
        }
    
        public virtual ObjectResult<FeedbackRatingDetails_Result> FeedbackRatingDetails(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FeedbackRatingDetails_Result>("FeedbackRatingDetails", productidParameter);
        }
    
        public virtual ObjectResult<FetchStuRegiDetails_Result> FetchStuRegiDetails(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchStuRegiDetails_Result>("FetchStuRegiDetails", customeridParameter);
        }
    
        public virtual ObjectResult<FilterSubCategoryProducts_Result> FilterSubCategoryProducts(Nullable<int> subCategoryId)
        {
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FilterSubCategoryProducts_Result>("FilterSubCategoryProducts", subCategoryIdParameter);
        }
    
        public virtual ObjectResult<string> ForgotPassword(string password, string mobileNumber, string email, string type)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ForgotPassword", passwordParameter, mobileNumberParameter, emailParameter, typeParameter);
        }
    
        public virtual int fso(string like, string type)
        {
            var likeParameter = like != null ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fso", likeParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetAge_Result> GetAge()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAge_Result>("GetAge");
        }
    
        public virtual int GetAllCartDetails(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllCartDetails", customeridParameter);
        }
    
        public virtual int GetAllPackageDetails(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllPackageDetails", customerIdParameter);
        }
    
        public virtual ObjectResult<GetAllStandards_Result> GetAllStandards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStandards_Result>("GetAllStandards");
        }
    
        public virtual int GetAllWishListDetails(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllWishListDetails", customerIdParameter);
        }
    
        public virtual ObjectResult<GetBoards_Result> GetBoards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBoards_Result>("GetBoards");
        }
    
        public virtual int GetBoardsProducts(Nullable<int> boardId, Nullable<int> customerId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBoardsProducts", boardIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetBoardsStandards_Result> GetBoardsStandards(Nullable<int> boardId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBoardsStandards_Result>("GetBoardsStandards", boardIdParameter);
        }
    
        public virtual ObjectResult<GetBoardStandard_Result> GetBoardStandard(Nullable<int> boardId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBoardStandard_Result>("GetBoardStandard", boardIdParameter);
        }
    
        public virtual ObjectResult<GetBrands_Result> GetBrands()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBrands_Result>("GetBrands");
        }
    
        public virtual ObjectResult<GetCartDetails_Result> GetCartDetails(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCartDetails_Result>("GetCartDetails", customeridParameter);
        }
    
        public virtual int GetCartEstimatedDateOfDelivery(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCartEstimatedDateOfDelivery", customeridParameter);
        }
    
        public virtual int GetCartPackage(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCartPackage", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCategory_Result> GetCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategory_Result>("GetCategory");
        }
    
        public virtual ObjectResult<GetCityStateDetails_Result> GetCityStateDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCityStateDetails_Result>("GetCityStateDetails");
        }
    
        public virtual ObjectResult<GetContactUsDetails_Result> GetContactUsDetails(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactUsDetails_Result>("GetContactUsDetails", customerIdParameter);
        }
    
        public virtual ObjectResult<GetContactUsIssue_Result> GetContactUsIssue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContactUsIssue_Result>("GetContactUsIssue");
        }
    
        public virtual ObjectResult<GetDefaultAddress_Result> GetDefaultAddress(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDefaultAddress_Result>("GetDefaultAddress", customeridParameter);
        }
    
        public virtual ObjectResult<GetFAQ_Result> GetFAQ()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFAQ_Result>("GetFAQ");
        }
    
        public virtual ObjectResult<GetFeedbackAndRating_Result> GetFeedbackAndRating(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeedbackAndRating_Result>("GetFeedbackAndRating", productidParameter);
        }
    
        public virtual ObjectResult<GetFeedbackAndRatingCount_Result> GetFeedbackAndRatingCount(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeedbackAndRatingCount_Result>("GetFeedbackAndRatingCount", productIdParameter);
        }
    
        public virtual ObjectResult<GetFeedbackAndRatingCustomerDetails_Result> GetFeedbackAndRatingCustomerDetails(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeedbackAndRatingCustomerDetails_Result>("GetFeedbackAndRatingCustomerDetails", productidParameter);
        }
    
        public virtual int GetFilterProducts(Nullable<int> subCategoryId, Nullable<int> generalSpecificationId, string description, Nullable<int> customerId)
        {
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            var generalSpecificationIdParameter = generalSpecificationId.HasValue ?
                new ObjectParameter("GeneralSpecificationId", generalSpecificationId) :
                new ObjectParameter("GeneralSpecificationId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetFilterProducts", subCategoryIdParameter, generalSpecificationIdParameter, descriptionParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetIsRewardProducts_Result> GetIsRewardProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetIsRewardProducts_Result>("GetIsRewardProducts");
        }
    
        public virtual ObjectResult<string> GetLandingBannerData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLandingBannerData");
        }
    
        public virtual ObjectResult<GetNotifications_Result> GetNotifications()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotifications_Result>("GetNotifications");
        }
    
        public virtual int GetOrderDetails(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetOrderDetails", customerIdParameter);
        }
    
        public virtual ObjectResult<GetOrderPackages_Result> GetOrderPackages(Nullable<long> orderid)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderPackages_Result>("GetOrderPackages", orderidParameter);
        }
    
        public virtual ObjectResult<GetOrderProducts_Result> GetOrderProducts(Nullable<long> orderid)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderProducts_Result>("GetOrderProducts", orderidParameter);
        }
    
        public virtual int GetPackageBoardStandard(Nullable<int> boardId, Nullable<int> standardId, Nullable<int> customerId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPackageBoardStandard", boardIdParameter, standardIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetPackageDetails_Result> GetPackageDetails(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("packageId", packageId) :
                new ObjectParameter("packageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageDetails_Result>("GetPackageDetails", packageIdParameter);
        }
    
        public virtual ObjectResult<GetPackageFeedbackAndRatingCount_Result> GetPackageFeedbackAndRatingCount(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageFeedbackAndRatingCount_Result>("GetPackageFeedbackAndRatingCount", packageIdParameter);
        }
    
        public virtual ObjectResult<string> GetPackageImages(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPackageImages", packageIdParameter);
        }
    
        public virtual ObjectResult<GetPackageProductsDetails_Result> GetPackageProductsDetails(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("packageId", packageId) :
                new ObjectParameter("packageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageProductsDetails_Result>("GetPackageProductsDetails", packageIdParameter);
        }
    
        public virtual ObjectResult<GetPackageProductsList_Result> GetPackageProductsList(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("packageId", packageId) :
                new ObjectParameter("packageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageProductsList_Result>("GetPackageProductsList", packageIdParameter);
        }
    
        public virtual int GetPackageSchoolBoardStandard(Nullable<int> boardId, Nullable<int> standardId, Nullable<int> schoolId, Nullable<int> customerId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPackageSchoolBoardStandard", boardIdParameter, standardIdParameter, schoolIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> GetPackageWishListDetails(Nullable<int> customerId, Nullable<int> packageId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("GetPackageWishListDetails", customerIdParameter, packageIdParameter);
        }
    
        public virtual ObjectResult<GetPayementFormat_Result> GetPayementFormat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPayementFormat_Result>("GetPayementFormat");
        }
    
        public virtual ObjectResult<GetPaymentStatus_Result> GetPaymentStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaymentStatus_Result>("GetPaymentStatus");
        }
    
        public virtual int GetPrice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPrice");
        }
    
        public virtual int GetPriceByBoard(Nullable<int> boardId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPriceByBoard", boardIdParameter);
        }
    
        public virtual int GetPriceByBrand(Nullable<int> brandId)
        {
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPriceByBrand", brandIdParameter);
        }
    
        public virtual int GetPriceByCategory(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPriceByCategory", categoryIdParameter);
        }
    
        public virtual int GetPriceByStandard(Nullable<int> standardId)
        {
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPriceByStandard", standardIdParameter);
        }
    
        public virtual int GetPriceBySubCategory(Nullable<int> subCategoryId)
        {
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPriceBySubCategory", subCategoryIdParameter);
        }
    
        public virtual int GetPriceByTerm(string term)
        {
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPriceByTerm", termParameter);
        }
    
        public virtual ObjectResult<GetProduct_Result> GetProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProduct_Result>("GetProduct");
        }
    
        public virtual ObjectResult<GetProductDescription_Result> GetProductDescription(Nullable<int> productId, string pincode)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductDescription_Result>("GetProductDescription", productIdParameter, pincodeParameter);
        }
    
        public virtual ObjectResult<GetProducts_Result> GetProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProducts_Result>("GetProducts");
        }
    
        public virtual int GetProductsCategory(Nullable<int> categoryId, Nullable<int> customerId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductsCategory", categoryIdParameter, customerIdParameter);
        }
    
        public virtual int GetProductStandard(Nullable<int> standardId, Nullable<int> customerId)
        {
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProductStandard", standardIdParameter, customerIdParameter);
        }
    
        public virtual int GetProfileDetails(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProfileDetails", customerIdParameter);
        }
    
        public virtual ObjectResult<GetRegistrationDetails_Result> GetRegistrationDetails(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRegistrationDetails_Result>("GetRegistrationDetails", customeridParameter);
        }
    
        public virtual ObjectResult<GetReplacementReason_Result> GetReplacementReason()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReplacementReason_Result>("GetReplacementReason");
        }
    
        public virtual ObjectResult<GetSchools_Result> GetSchools(Nullable<int> boardId)
        {
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchools_Result>("GetSchools", boardIdParameter);
        }
    
        public virtual int GetSearchPackageDetails(string type, Nullable<int> id, Nullable<int> customerId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSearchPackageDetails", typeParameter, idParameter, customerIdParameter);
        }
    
        public virtual int GetSearchProducts(Nullable<int> customerId, string type, Nullable<int> id, string subcategoryid, Nullable<int> minage, Nullable<int> maxage, Nullable<decimal> minprice, Nullable<decimal> maxprice, string enterword)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var subcategoryidParameter = subcategoryid != null ?
                new ObjectParameter("subcategoryid", subcategoryid) :
                new ObjectParameter("subcategoryid", typeof(string));
    
            var minageParameter = minage.HasValue ?
                new ObjectParameter("minage", minage) :
                new ObjectParameter("minage", typeof(int));
    
            var maxageParameter = maxage.HasValue ?
                new ObjectParameter("maxage", maxage) :
                new ObjectParameter("maxage", typeof(int));
    
            var minpriceParameter = minprice.HasValue ?
                new ObjectParameter("minprice", minprice) :
                new ObjectParameter("minprice", typeof(decimal));
    
            var maxpriceParameter = maxprice.HasValue ?
                new ObjectParameter("maxprice", maxprice) :
                new ObjectParameter("maxprice", typeof(decimal));
    
            var enterwordParameter = enterword != null ?
                new ObjectParameter("enterword", enterword) :
                new ObjectParameter("enterword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSearchProducts", customerIdParameter, typeParameter, idParameter, subcategoryidParameter, minageParameter, maxageParameter, minpriceParameter, maxpriceParameter, enterwordParameter);
        }
    
        public virtual int GetSearchProducts_02_12_16(string type, Nullable<int> id, string subcategoryid, Nullable<int> minage, Nullable<int> maxage, Nullable<decimal> minprice, Nullable<decimal> maxprice, string enterword)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var subcategoryidParameter = subcategoryid != null ?
                new ObjectParameter("subcategoryid", subcategoryid) :
                new ObjectParameter("subcategoryid", typeof(string));
    
            var minageParameter = minage.HasValue ?
                new ObjectParameter("minage", minage) :
                new ObjectParameter("minage", typeof(int));
    
            var maxageParameter = maxage.HasValue ?
                new ObjectParameter("maxage", maxage) :
                new ObjectParameter("maxage", typeof(int));
    
            var minpriceParameter = minprice.HasValue ?
                new ObjectParameter("minprice", minprice) :
                new ObjectParameter("minprice", typeof(decimal));
    
            var maxpriceParameter = maxprice.HasValue ?
                new ObjectParameter("maxprice", maxprice) :
                new ObjectParameter("maxprice", typeof(decimal));
    
            var enterwordParameter = enterword != null ?
                new ObjectParameter("enterword", enterword) :
                new ObjectParameter("enterword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSearchProducts_02_12_16", typeParameter, idParameter, subcategoryidParameter, minageParameter, maxageParameter, minpriceParameter, maxpriceParameter, enterwordParameter);
        }
    
        public virtual int GetSimilarProducts(Nullable<int> productid, Nullable<int> customerId)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSimilarProducts", productidParameter, customerIdParameter);
        }
    
        public virtual int GetSortPackages(string type, Nullable<int> customerId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSortPackages", typeParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetSortProducts_Result> GetSortProducts(string productId, string type)
        {
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSortProducts_Result>("GetSortProducts", productIdParameter, typeParameter);
        }
    
        public virtual int GetSortProductsBrands(string searchType, string id, string type, Nullable<int> customerId)
        {
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSortProductsBrands", searchTypeParameter, idParameter, typeParameter, customerIdParameter);
        }
    
        public virtual int GetSortProductsCategory(string searchType, string id, string type, Nullable<int> customerId)
        {
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSortProductsCategory", searchTypeParameter, idParameter, typeParameter, customerIdParameter);
        }
    
        public virtual int GetSortProductsProductType(string searchType, string id, string type, Nullable<int> customerId)
        {
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSortProductsProductType", searchTypeParameter, idParameter, typeParameter, customerIdParameter);
        }
    
        public virtual int GetSortProductsSubCategory(string searchType, string id, string type, Nullable<int> customerId)
        {
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSortProductsSubCategory", searchTypeParameter, idParameter, typeParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<GetSpecificationDescription_Result> GetSpecificationDescription(Nullable<int> subCategoryId, Nullable<int> generalSpecificationId)
        {
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            var generalSpecificationIdParameter = generalSpecificationId.HasValue ?
                new ObjectParameter("GeneralSpecificationId", generalSpecificationId) :
                new ObjectParameter("GeneralSpecificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSpecificationDescription_Result>("GetSpecificationDescription", subCategoryIdParameter, generalSpecificationIdParameter);
        }
    
        public virtual ObjectResult<GetStandard_Result> GetStandard(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStandard_Result>("GetStandard", schoolIdParameter);
        }
    
        public virtual ObjectResult<GetSubCategory_Result> GetSubCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubCategory_Result>("GetSubCategory");
        }
    
        public virtual ObjectResult<GetSubCategoryCategory_Result> GetSubCategoryCategory(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubCategoryCategory_Result>("GetSubCategoryCategory", categoryIdParameter);
        }
    
        public virtual ObjectResult<GetTermsAndConditions_Result> GetTermsAndConditions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTermsAndConditions_Result>("GetTermsAndConditions");
        }
    
        public virtual ObjectResult<GetWishList_Result> GetWishList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWishList_Result>("GetWishList", customerIdParameter);
        }
    
        public virtual int GetWishListPackage(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetWishListPackage", customerIdParameter);
        }
    
        public virtual int GiveFeedBackRating(Nullable<int> customerid, Nullable<int> productid, Nullable<double> rating, string review)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(double));
    
            var reviewParameter = review != null ?
                new ObjectParameter("review", review) :
                new ObjectParameter("review", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GiveFeedBackRating", customeridParameter, productidParameter, ratingParameter, reviewParameter);
        }
    
        public virtual int HomeBanners()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HomeBanners");
        }
    
        public virtual int HomeBanners_09_12_16()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HomeBanners_09_12_16");
        }
    
        public virtual ObjectResult<HomeBanners_17_10_16_rj_bkp_Result> HomeBanners_17_10_16_rj_bkp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HomeBanners_17_10_16_rj_bkp_Result>("HomeBanners_17_10_16_rj_bkp");
        }
    
        public virtual ObjectResult<string> InsertContactUs(Nullable<int> customerId, Nullable<int> contactUsIssueId, string description, Nullable<bool> type)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var contactUsIssueIdParameter = contactUsIssueId.HasValue ?
                new ObjectParameter("ContactUsIssueId", contactUsIssueId) :
                new ObjectParameter("ContactUsIssueId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertContactUs", customerIdParameter, contactUsIssueIdParameter, descriptionParameter, typeParameter);
        }
    
        public virtual int InsertMultipleCart(string productId, string packageId, Nullable<int> customerId)
        {
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            var packageIdParameter = packageId != null ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMultipleCart", productIdParameter, packageIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<string> InsertNotifications(string title, string description)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertNotifications", titleParameter, descriptionParameter);
        }
    
        public virtual int insertorderdetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertorderdetails");
        }
    
        public virtual int IStudent_dataClass1(Nullable<int> schoolID, string studentName, string password, string mobilenumber, Nullable<int> gradeID, string division, string email)
        {
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("schoolID", schoolID) :
                new ObjectParameter("schoolID", typeof(int));
    
            var studentNameParameter = studentName != null ?
                new ObjectParameter("StudentName", studentName) :
                new ObjectParameter("StudentName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobilenumberParameter = mobilenumber != null ?
                new ObjectParameter("mobilenumber", mobilenumber) :
                new ObjectParameter("mobilenumber", typeof(string));
    
            var gradeIDParameter = gradeID.HasValue ?
                new ObjectParameter("gradeID", gradeID) :
                new ObjectParameter("gradeID", typeof(int));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IStudent_dataClass1", schoolIDParameter, studentNameParameter, passwordParameter, mobilenumberParameter, gradeIDParameter, divisionParameter, emailParameter);
        }
    
        public virtual int ITeacher_data(Nullable<int> t_schoolID, string salutaion, string tF_name, string tL_name, string mobile_number, string email_Id, string password)
        {
            var t_schoolIDParameter = t_schoolID.HasValue ?
                new ObjectParameter("t_schoolID", t_schoolID) :
                new ObjectParameter("t_schoolID", typeof(int));
    
            var salutaionParameter = salutaion != null ?
                new ObjectParameter("salutaion", salutaion) :
                new ObjectParameter("salutaion", typeof(string));
    
            var tF_nameParameter = tF_name != null ?
                new ObjectParameter("TF_name", tF_name) :
                new ObjectParameter("TF_name", typeof(string));
    
            var tL_nameParameter = tL_name != null ?
                new ObjectParameter("TL_name", tL_name) :
                new ObjectParameter("TL_name", typeof(string));
    
            var mobile_numberParameter = mobile_number != null ?
                new ObjectParameter("Mobile_number", mobile_number) :
                new ObjectParameter("Mobile_number", typeof(string));
    
            var email_IdParameter = email_Id != null ?
                new ObjectParameter("Email_Id", email_Id) :
                new ObjectParameter("Email_Id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ITeacher_data", t_schoolIDParameter, salutaionParameter, tF_nameParameter, tL_nameParameter, mobile_numberParameter, email_IdParameter, passwordParameter);
        }
    
        public virtual int ITeacher_Gradedata(Nullable<int> mapTeacherId, Nullable<int> mMapGradeID)
        {
            var mapTeacherIdParameter = mapTeacherId.HasValue ?
                new ObjectParameter("MapTeacherId", mapTeacherId) :
                new ObjectParameter("MapTeacherId", typeof(int));
    
            var mMapGradeIDParameter = mMapGradeID.HasValue ?
                new ObjectParameter("MMapGradeID", mMapGradeID) :
                new ObjectParameter("MMapGradeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ITeacher_Gradedata", mapTeacherIdParameter, mMapGradeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ItemsInCart(string customerId)
        {
            var customerIdParameter = customerId != null ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ItemsInCart", customerIdParameter);
        }
    
        public virtual ObjectResult<Login_Result> Login(string emailId, string mobileNumber, string password, string type, string systemIP)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var systemIPParameter = systemIP != null ?
                new ObjectParameter("SystemIP", systemIP) :
                new ObjectParameter("SystemIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Login_Result>("Login", emailIdParameter, mobileNumberParameter, passwordParameter, typeParameter, systemIPParameter);
        }
    
        public virtual ObjectResult<string> LogOut(Nullable<int> loginId)
        {
            var loginIdParameter = loginId.HasValue ?
                new ObjectParameter("LoginId", loginId) :
                new ObjectParameter("LoginId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LogOut", loginIdParameter);
        }
    
        public virtual ObjectResult<PackageFeedbackRatingDetails_Result> PackageFeedbackRatingDetails(Nullable<int> packageid)
        {
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PackageFeedbackRatingDetails_Result>("PackageFeedbackRatingDetails", packageidParameter);
        }
    
        public virtual int PackageRatingDetails(Nullable<int> packageid)
        {
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PackageRatingDetails", packageidParameter);
        }
    
        public virtual ObjectResult<Portal_GetDefaultAddress_Result> Portal_GetDefaultAddress(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Portal_GetDefaultAddress_Result>("Portal_GetDefaultAddress", customeridParameter);
        }
    
        public virtual int RatingDetails(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RatingDetails", productidParameter);
        }
    
        public virtual ObjectResult<string> Registration(string firstName, string lastName, string emailId, string mobileNumber, string password, string profilePic, string streetAddress, string landmark, Nullable<int> cityId, Nullable<int> stateId, Nullable<int> countryId, string pincode, Nullable<bool> isDefault, string dateOfBirth)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var profilePicParameter = profilePic != null ?
                new ObjectParameter("ProfilePic", profilePic) :
                new ObjectParameter("ProfilePic", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var landmarkParameter = landmark != null ?
                new ObjectParameter("Landmark", landmark) :
                new ObjectParameter("Landmark", typeof(string));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var isDefaultParameter = isDefault.HasValue ?
                new ObjectParameter("IsDefault", isDefault) :
                new ObjectParameter("IsDefault", typeof(bool));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Registration", firstNameParameter, lastNameParameter, emailIdParameter, mobileNumberParameter, passwordParameter, profilePicParameter, streetAddressParameter, landmarkParameter, cityIdParameter, stateIdParameter, countryIdParameter, pincodeParameter, isDefaultParameter, dateOfBirthParameter);
        }
    
        public virtual int ReplaceProduct(Nullable<int> orderId, string productId, string orderReplacementId, string quantityId, string packageId, string packageQuantityId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            var orderReplacementIdParameter = orderReplacementId != null ?
                new ObjectParameter("OrderReplacementId", orderReplacementId) :
                new ObjectParameter("OrderReplacementId", typeof(string));
    
            var quantityIdParameter = quantityId != null ?
                new ObjectParameter("QuantityId", quantityId) :
                new ObjectParameter("QuantityId", typeof(string));
    
            var packageIdParameter = packageId != null ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(string));
    
            var packageQuantityIdParameter = packageQuantityId != null ?
                new ObjectParameter("PackageQuantityId", packageQuantityId) :
                new ObjectParameter("PackageQuantityId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReplaceProduct", orderIdParameter, productIdParameter, orderReplacementIdParameter, quantityIdParameter, packageIdParameter, packageQuantityIdParameter);
        }
    
        public virtual int ReplaceProduct_15_11_16(Nullable<int> orderId, string productId, string orderReplacementId, string quantityId, string packageId, string packageQuantityId, string packageOrderReplacementId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            var orderReplacementIdParameter = orderReplacementId != null ?
                new ObjectParameter("OrderReplacementId", orderReplacementId) :
                new ObjectParameter("OrderReplacementId", typeof(string));
    
            var quantityIdParameter = quantityId != null ?
                new ObjectParameter("QuantityId", quantityId) :
                new ObjectParameter("QuantityId", typeof(string));
    
            var packageIdParameter = packageId != null ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(string));
    
            var packageQuantityIdParameter = packageQuantityId != null ?
                new ObjectParameter("PackageQuantityId", packageQuantityId) :
                new ObjectParameter("PackageQuantityId", typeof(string));
    
            var packageOrderReplacementIdParameter = packageOrderReplacementId != null ?
                new ObjectParameter("PackageOrderReplacementId", packageOrderReplacementId) :
                new ObjectParameter("PackageOrderReplacementId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReplaceProduct_15_11_16", orderIdParameter, productIdParameter, orderReplacementIdParameter, quantityIdParameter, packageIdParameter, packageQuantityIdParameter, packageOrderReplacementIdParameter);
        }
    
        public virtual int Search(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Search", nameParameter);
        }
    
        public virtual int Search_18_10_16_rj(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Search_18_10_16_rj", nameParameter);
        }
    
        public virtual ObjectResult<string> SetDefaultAdress(Nullable<int> customerID, Nullable<int> customerAddressId)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerAddressIdParameter = customerAddressId.HasValue ?
                new ObjectParameter("CustomerAddressId", customerAddressId) :
                new ObjectParameter("CustomerAddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SetDefaultAdress", customerIDParameter, customerAddressIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Sp_Backend_GetCustomerReplacement_Result> Sp_Backend_GetCustomerReplacement(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Backend_GetCustomerReplacement_Result>("Sp_Backend_GetCustomerReplacement", orderIdParameter);
        }
    
        public virtual ObjectResult<SP_Backend_GetOrderDetails_Result> SP_Backend_GetOrderDetails(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Backend_GetOrderDetails_Result>("SP_Backend_GetOrderDetails", orderIdParameter);
        }
    
        public virtual ObjectResult<Sp_Backend_GetOrderProductList_Result> Sp_Backend_GetOrderProductList(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Backend_GetOrderProductList_Result>("Sp_Backend_GetOrderProductList", orderIdParameter);
        }
    
        public virtual ObjectResult<Sp_Backend_GetOrderTransitionHistory_Result> Sp_Backend_GetOrderTransitionHistory(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Backend_GetOrderTransitionHistory_Result>("Sp_Backend_GetOrderTransitionHistory", orderIdParameter);
        }
    
        public virtual ObjectResult<Sp_Backend_GetPackages_Result> Sp_Backend_GetPackages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Backend_GetPackages_Result>("Sp_Backend_GetPackages");
        }
    
        public virtual ObjectResult<Sp_Backend_GetProducts_Result> Sp_Backend_GetProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Backend_GetProducts_Result>("Sp_Backend_GetProducts");
        }
    
        public virtual ObjectResult<SP_Backend_UpdatePackageMappingProduct_Result> SP_Backend_UpdatePackageMappingProduct(Nullable<int> packageId, Nullable<int> supplierId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Backend_UpdatePackageMappingProduct_Result>("SP_Backend_UpdatePackageMappingProduct", packageIdParameter, supplierIdParameter);
        }
    
        public virtual int SP_Backend_UpdatePkgMappingProductsFalse(Nullable<int> productId, Nullable<int> packageId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Backend_UpdatePkgMappingProductsFalse", productIdParameter, packageIdParameter);
        }
    
        public virtual int SP_Backend_UpdatePkgMappingProductsTrue(Nullable<int> productId, Nullable<int> packageId, Nullable<int> quantity)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Backend_UpdatePkgMappingProductsTrue", productIdParameter, packageIdParameter, quantityParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<SPCourierLogin_Result> SPCourierLogin(string emailId, string mobileNumber, string password, string type, string systemIP)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var systemIPParameter = systemIP != null ?
                new ObjectParameter("SystemIP", systemIP) :
                new ObjectParameter("SystemIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPCourierLogin_Result>("SPCourierLogin", emailIdParameter, mobileNumberParameter, passwordParameter, typeParameter, systemIPParameter);
        }
    
        public virtual ObjectResult<string> SupplierCheckAccountExist(string mobileNumber, string email, string type)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SupplierCheckAccountExist", mobileNumberParameter, emailParameter, typeParameter);
        }
    
        public virtual ObjectResult<SupplierLogin_Result> SupplierLogin(string emailId, string mobileNumber, string password, string type, string systemIP)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var systemIPParameter = systemIP != null ?
                new ObjectParameter("SystemIP", systemIP) :
                new ObjectParameter("SystemIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupplierLogin_Result>("SupplierLogin", emailIdParameter, mobileNumberParameter, passwordParameter, typeParameter, systemIPParameter);
        }
    
        public virtual int test123(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("test123", idParameter);
        }
    
        public virtual int TestLoop()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TestLoop");
        }
    
        public virtual ObjectResult<string> UpdateAddressDetails(Nullable<int> customerAddressId, string firstName, string lastName, string mobileNumber, string streetAddress, string landmark, Nullable<int> cityId, string pincode)
        {
            var customerAddressIdParameter = customerAddressId.HasValue ?
                new ObjectParameter("CustomerAddressId", customerAddressId) :
                new ObjectParameter("CustomerAddressId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var landmarkParameter = landmark != null ?
                new ObjectParameter("Landmark", landmark) :
                new ObjectParameter("Landmark", typeof(string));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateAddressDetails", customerAddressIdParameter, firstNameParameter, lastNameParameter, mobileNumberParameter, streetAddressParameter, landmarkParameter, cityIdParameter, pincodeParameter);
        }
    
        public virtual ObjectResult<string> usp_AddNewPrivacyPolicyContent(string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AddNewPrivacyPolicyContent", contentParameter);
        }
    
        public virtual ObjectResult<string> usp_AddNewScholarshipPointContent(string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AddNewScholarshipPointContent", contentParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_AddNewTicket(string description, Nullable<int> orderId, Nullable<int> ticketCategoryId, Nullable<int> ticketPriorityId, Nullable<int> ticketSourceId, Nullable<int> ticketStatusId, Nullable<int> userId, Nullable<int> schoolId)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var ticketCategoryIdParameter = ticketCategoryId.HasValue ?
                new ObjectParameter("TicketCategoryId", ticketCategoryId) :
                new ObjectParameter("TicketCategoryId", typeof(int));
    
            var ticketPriorityIdParameter = ticketPriorityId.HasValue ?
                new ObjectParameter("TicketPriorityId", ticketPriorityId) :
                new ObjectParameter("TicketPriorityId", typeof(int));
    
            var ticketSourceIdParameter = ticketSourceId.HasValue ?
                new ObjectParameter("TicketSourceId", ticketSourceId) :
                new ObjectParameter("TicketSourceId", typeof(int));
    
            var ticketStatusIdParameter = ticketStatusId.HasValue ?
                new ObjectParameter("TicketStatusId", ticketStatusId) :
                new ObjectParameter("TicketStatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_AddNewTicket", descriptionParameter, orderIdParameter, ticketCategoryIdParameter, ticketPriorityIdParameter, ticketSourceIdParameter, ticketStatusIdParameter, userIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<string> usp_AddOrUpdateAnnotations(Nullable<int> orders_Mapping_Product_Package_Mapping_ProductId, string anotationList)
        {
            var orders_Mapping_Product_Package_Mapping_ProductIdParameter = orders_Mapping_Product_Package_Mapping_ProductId.HasValue ?
                new ObjectParameter("Orders_Mapping_Product_Package_Mapping_ProductId", orders_Mapping_Product_Package_Mapping_ProductId) :
                new ObjectParameter("Orders_Mapping_Product_Package_Mapping_ProductId", typeof(int));
    
            var anotationListParameter = anotationList != null ?
                new ObjectParameter("AnotationList", anotationList) :
                new ObjectParameter("AnotationList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AddOrUpdateAnnotations", orders_Mapping_Product_Package_Mapping_ProductIdParameter, anotationListParameter);
        }
    
        public virtual ObjectResult<string> usp_AssignConsignmentToRunnerBoy(string orderIds, Nullable<int> userId)
        {
            var orderIdsParameter = orderIds != null ?
                new ObjectParameter("OrderIds", orderIds) :
                new ObjectParameter("OrderIds", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AssignConsignmentToRunnerBoy", orderIdsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> usp_AssignTrackingNumber(string type, Nullable<int> orderId, Nullable<int> courierId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AssignTrackingNumber", typeParameter, orderIdParameter, courierIdParameter);
        }
    
        public virtual ObjectResult<string> usp_AssignTrackingNumberToOrder(string type, Nullable<int> orderId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_AssignTrackingNumberToOrder", typeParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_CheckOfferCanAvailability(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_CheckOfferCanAvailability", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_CRUDAppRelease_Result> usp_CRUDAppRelease(string type, string android_Url, string android_Latest_Version, Nullable<bool> android_Update_Flag, string iOS_Url, string iOS_Latest_Version, Nullable<bool> iOS_Update_Flag)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var android_UrlParameter = android_Url != null ?
                new ObjectParameter("Android_Url", android_Url) :
                new ObjectParameter("Android_Url", typeof(string));
    
            var android_Latest_VersionParameter = android_Latest_Version != null ?
                new ObjectParameter("Android_Latest_Version", android_Latest_Version) :
                new ObjectParameter("Android_Latest_Version", typeof(string));
    
            var android_Update_FlagParameter = android_Update_Flag.HasValue ?
                new ObjectParameter("Android_Update_Flag", android_Update_Flag) :
                new ObjectParameter("Android_Update_Flag", typeof(bool));
    
            var iOS_UrlParameter = iOS_Url != null ?
                new ObjectParameter("iOS_Url", iOS_Url) :
                new ObjectParameter("iOS_Url", typeof(string));
    
            var iOS_Latest_VersionParameter = iOS_Latest_Version != null ?
                new ObjectParameter("iOS_Latest_Version", iOS_Latest_Version) :
                new ObjectParameter("iOS_Latest_Version", typeof(string));
    
            var iOS_Update_FlagParameter = iOS_Update_Flag.HasValue ?
                new ObjectParameter("iOS_Update_Flag", iOS_Update_Flag) :
                new ObjectParameter("iOS_Update_Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDAppRelease_Result>("usp_CRUDAppRelease", typeParameter, android_UrlParameter, android_Latest_VersionParameter, android_Update_FlagParameter, iOS_UrlParameter, iOS_Latest_VersionParameter, iOS_Update_FlagParameter);
        }
    
        public virtual ObjectResult<usp_CRUDCoupon_Result> usp_CRUDCoupon(string type, Nullable<int> couponId, Nullable<int> couponTypeId, string couponCode, string couponTitle, string coupounDescription, Nullable<decimal> minOrderAmount, Nullable<decimal> maxOrderAmount, Nullable<decimal> offerAmount, Nullable<decimal> offerPercentage, Nullable<int> reedemCount, Nullable<int> couponLeftCount, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> isActive)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var couponIdParameter = couponId.HasValue ?
                new ObjectParameter("CouponId", couponId) :
                new ObjectParameter("CouponId", typeof(int));
    
            var couponTypeIdParameter = couponTypeId.HasValue ?
                new ObjectParameter("CouponTypeId", couponTypeId) :
                new ObjectParameter("CouponTypeId", typeof(int));
    
            var couponCodeParameter = couponCode != null ?
                new ObjectParameter("CouponCode", couponCode) :
                new ObjectParameter("CouponCode", typeof(string));
    
            var couponTitleParameter = couponTitle != null ?
                new ObjectParameter("CouponTitle", couponTitle) :
                new ObjectParameter("CouponTitle", typeof(string));
    
            var coupounDescriptionParameter = coupounDescription != null ?
                new ObjectParameter("CoupounDescription", coupounDescription) :
                new ObjectParameter("CoupounDescription", typeof(string));
    
            var minOrderAmountParameter = minOrderAmount.HasValue ?
                new ObjectParameter("MinOrderAmount", minOrderAmount) :
                new ObjectParameter("MinOrderAmount", typeof(decimal));
    
            var maxOrderAmountParameter = maxOrderAmount.HasValue ?
                new ObjectParameter("MaxOrderAmount", maxOrderAmount) :
                new ObjectParameter("MaxOrderAmount", typeof(decimal));
    
            var offerAmountParameter = offerAmount.HasValue ?
                new ObjectParameter("OfferAmount", offerAmount) :
                new ObjectParameter("OfferAmount", typeof(decimal));
    
            var offerPercentageParameter = offerPercentage.HasValue ?
                new ObjectParameter("OfferPercentage", offerPercentage) :
                new ObjectParameter("OfferPercentage", typeof(decimal));
    
            var reedemCountParameter = reedemCount.HasValue ?
                new ObjectParameter("ReedemCount", reedemCount) :
                new ObjectParameter("ReedemCount", typeof(int));
    
            var couponLeftCountParameter = couponLeftCount.HasValue ?
                new ObjectParameter("CouponLeftCount", couponLeftCount) :
                new ObjectParameter("CouponLeftCount", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDCoupon_Result>("usp_CRUDCoupon", typeParameter, couponIdParameter, couponTypeIdParameter, couponCodeParameter, couponTitleParameter, coupounDescriptionParameter, minOrderAmountParameter, maxOrderAmountParameter, offerAmountParameter, offerPercentageParameter, reedemCountParameter, couponLeftCountParameter, startDateParameter, endDateParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<usp_CRUDCourier_Mapping_RunnerBoy_Result> usp_CRUDCourier_Mapping_RunnerBoy(string type, Nullable<int> courier_Mapping_RunnerBoyId, Nullable<int> courierId, Nullable<int> userId, Nullable<bool> status)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var courier_Mapping_RunnerBoyIdParameter = courier_Mapping_RunnerBoyId.HasValue ?
                new ObjectParameter("Courier_Mapping_RunnerBoyId", courier_Mapping_RunnerBoyId) :
                new ObjectParameter("Courier_Mapping_RunnerBoyId", typeof(int));
    
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDCourier_Mapping_RunnerBoy_Result>("usp_CRUDCourier_Mapping_RunnerBoy", typeParameter, courier_Mapping_RunnerBoyIdParameter, courierIdParameter, userIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<usp_CRUDPublisher_Mapping_Brand_Result> usp_CRUDPublisher_Mapping_Brand(string type, Nullable<int> publisher_Mapping_BrandId, Nullable<int> publisherId, Nullable<int> brandId, Nullable<bool> deleteStatus)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var publisher_Mapping_BrandIdParameter = publisher_Mapping_BrandId.HasValue ?
                new ObjectParameter("Publisher_Mapping_BrandId", publisher_Mapping_BrandId) :
                new ObjectParameter("Publisher_Mapping_BrandId", typeof(int));
    
            var publisherIdParameter = publisherId.HasValue ?
                new ObjectParameter("PublisherId", publisherId) :
                new ObjectParameter("PublisherId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var deleteStatusParameter = deleteStatus.HasValue ?
                new ObjectParameter("DeleteStatus", deleteStatus) :
                new ObjectParameter("DeleteStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDPublisher_Mapping_Brand_Result>("usp_CRUDPublisher_Mapping_Brand", typeParameter, publisher_Mapping_BrandIdParameter, publisherIdParameter, brandIdParameter, deleteStatusParameter);
        }
    
        public virtual ObjectResult<usp_CRUDReedem_Products_Shipping_Charges_Result> usp_CRUDReedem_Products_Shipping_Charges(string type, Nullable<int> reedem_Products_Shipping_ChargesId, Nullable<int> charges, Nullable<int> minProducts, Nullable<int> maxProducts, Nullable<int> supplierId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var reedem_Products_Shipping_ChargesIdParameter = reedem_Products_Shipping_ChargesId.HasValue ?
                new ObjectParameter("Reedem_Products_Shipping_ChargesId", reedem_Products_Shipping_ChargesId) :
                new ObjectParameter("Reedem_Products_Shipping_ChargesId", typeof(int));
    
            var chargesParameter = charges.HasValue ?
                new ObjectParameter("Charges", charges) :
                new ObjectParameter("Charges", typeof(int));
    
            var minProductsParameter = minProducts.HasValue ?
                new ObjectParameter("MinProducts", minProducts) :
                new ObjectParameter("MinProducts", typeof(int));
    
            var maxProductsParameter = maxProducts.HasValue ?
                new ObjectParameter("MaxProducts", maxProducts) :
                new ObjectParameter("MaxProducts", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDReedem_Products_Shipping_Charges_Result>("usp_CRUDReedem_Products_Shipping_Charges", typeParameter, reedem_Products_Shipping_ChargesIdParameter, chargesParameter, minProductsParameter, maxProductsParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_CRUDScholarshipPointDonationCertificateType_Result> usp_CRUDScholarshipPointDonationCertificateType(string type, Nullable<int> scholarshipPointDonationCertificateTypeId, string scholarshipPointDonationCertificateTypeName, Nullable<int> minPoints, Nullable<int> maxPoints, Nullable<bool> generateCertificateFlag)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var scholarshipPointDonationCertificateTypeIdParameter = scholarshipPointDonationCertificateTypeId.HasValue ?
                new ObjectParameter("ScholarshipPointDonationCertificateTypeId", scholarshipPointDonationCertificateTypeId) :
                new ObjectParameter("ScholarshipPointDonationCertificateTypeId", typeof(int));
    
            var scholarshipPointDonationCertificateTypeNameParameter = scholarshipPointDonationCertificateTypeName != null ?
                new ObjectParameter("ScholarshipPointDonationCertificateTypeName", scholarshipPointDonationCertificateTypeName) :
                new ObjectParameter("ScholarshipPointDonationCertificateTypeName", typeof(string));
    
            var minPointsParameter = minPoints.HasValue ?
                new ObjectParameter("MinPoints", minPoints) :
                new ObjectParameter("MinPoints", typeof(int));
    
            var maxPointsParameter = maxPoints.HasValue ?
                new ObjectParameter("MaxPoints", maxPoints) :
                new ObjectParameter("MaxPoints", typeof(int));
    
            var generateCertificateFlagParameter = generateCertificateFlag.HasValue ?
                new ObjectParameter("GenerateCertificateFlag", generateCertificateFlag) :
                new ObjectParameter("GenerateCertificateFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDScholarshipPointDonationCertificateType_Result>("usp_CRUDScholarshipPointDonationCertificateType", typeParameter, scholarshipPointDonationCertificateTypeIdParameter, scholarshipPointDonationCertificateTypeNameParameter, minPointsParameter, maxPointsParameter, generateCertificateFlagParameter);
        }
    
        public virtual ObjectResult<usp_CRUDTicketComment_Result> usp_CRUDTicketComment(Nullable<int> ticketId, Nullable<int> userId, string comment, string action)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDTicketComment_Result>("usp_CRUDTicketComment", ticketIdParameter, userIdParameter, commentParameter, actionParameter);
        }
    
        public virtual ObjectResult<usp_CRUDUndelivered_Reason_Result> usp_CRUDUndelivered_Reason(string type, Nullable<int> undelivered_ReasonId, Nullable<int> sequenceNumber, string reason, Nullable<bool> deleteStatus)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var undelivered_ReasonIdParameter = undelivered_ReasonId.HasValue ?
                new ObjectParameter("Undelivered_ReasonId", undelivered_ReasonId) :
                new ObjectParameter("Undelivered_ReasonId", typeof(int));
    
            var sequenceNumberParameter = sequenceNumber.HasValue ?
                new ObjectParameter("SequenceNumber", sequenceNumber) :
                new ObjectParameter("SequenceNumber", typeof(int));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var deleteStatusParameter = deleteStatus.HasValue ?
                new ObjectParameter("DeleteStatus", deleteStatus) :
                new ObjectParameter("DeleteStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDUndelivered_Reason_Result>("usp_CRUDUndelivered_Reason", typeParameter, undelivered_ReasonIdParameter, sequenceNumberParameter, reasonParameter, deleteStatusParameter);
        }
    
        public virtual ObjectResult<usp_CustomerOrderDetails_Result> usp_CustomerOrderDetails(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerOrderDetails_Result>("usp_CustomerOrderDetails", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_CustomerOrderDetailsNew_Result> usp_CustomerOrderDetailsNew(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerOrderDetailsNew_Result>("usp_CustomerOrderDetailsNew", orderIdParameter);
        }
    
        public virtual int usp_DeleteCustomer(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteCustomer", customerIdParameter);
        }
    
        public virtual int usp_DeleteCustomerOrder(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteCustomerOrder", orderIdParameter);
        }
    
        public virtual int usp_DeletePackage(Nullable<int> packageid)
        {
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeletePackage", packageidParameter);
        }
    
        public virtual int usp_DeleteProduct(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteProduct", productidParameter);
        }
    
        public virtual int usp_DeleteRepeatedLogisticsOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteRepeatedLogisticsOrder");
        }
    
        public virtual ObjectResult<usp_Directory_Result> usp_Directory(string customer_Fname, string customer_Lname, string customer_Mobile, string customer_Email, string student_Fname, string student_Mname, string student_Lname, string school_Name, string standard_Name, string orderNumber, string awbNo)
        {
            var customer_FnameParameter = customer_Fname != null ?
                new ObjectParameter("Customer_Fname", customer_Fname) :
                new ObjectParameter("Customer_Fname", typeof(string));
    
            var customer_LnameParameter = customer_Lname != null ?
                new ObjectParameter("Customer_Lname", customer_Lname) :
                new ObjectParameter("Customer_Lname", typeof(string));
    
            var customer_MobileParameter = customer_Mobile != null ?
                new ObjectParameter("Customer_Mobile", customer_Mobile) :
                new ObjectParameter("Customer_Mobile", typeof(string));
    
            var customer_EmailParameter = customer_Email != null ?
                new ObjectParameter("Customer_Email", customer_Email) :
                new ObjectParameter("Customer_Email", typeof(string));
    
            var student_FnameParameter = student_Fname != null ?
                new ObjectParameter("Student_Fname", student_Fname) :
                new ObjectParameter("Student_Fname", typeof(string));
    
            var student_MnameParameter = student_Mname != null ?
                new ObjectParameter("Student_Mname", student_Mname) :
                new ObjectParameter("Student_Mname", typeof(string));
    
            var student_LnameParameter = student_Lname != null ?
                new ObjectParameter("Student_Lname", student_Lname) :
                new ObjectParameter("Student_Lname", typeof(string));
    
            var school_NameParameter = school_Name != null ?
                new ObjectParameter("School_Name", school_Name) :
                new ObjectParameter("School_Name", typeof(string));
    
            var standard_NameParameter = standard_Name != null ?
                new ObjectParameter("Standard_Name", standard_Name) :
                new ObjectParameter("Standard_Name", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var awbNoParameter = awbNo != null ?
                new ObjectParameter("AwbNo", awbNo) :
                new ObjectParameter("AwbNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Directory_Result>("usp_Directory", customer_FnameParameter, customer_LnameParameter, customer_MobileParameter, customer_EmailParameter, student_FnameParameter, student_MnameParameter, student_LnameParameter, school_NameParameter, standard_NameParameter, orderNumberParameter, awbNoParameter);
        }
    
        public virtual ObjectResult<usp_DirectorySmartFilter_Result> usp_DirectorySmartFilter(string customer_Fname, string customer_Lname, string customer_Mobile, string customer_Email, string student_Fname, string student_Mname, string student_Lname, string school_Name, string standard_Name, string orderNumber, string awbNo)
        {
            var customer_FnameParameter = customer_Fname != null ?
                new ObjectParameter("Customer_Fname", customer_Fname) :
                new ObjectParameter("Customer_Fname", typeof(string));
    
            var customer_LnameParameter = customer_Lname != null ?
                new ObjectParameter("Customer_Lname", customer_Lname) :
                new ObjectParameter("Customer_Lname", typeof(string));
    
            var customer_MobileParameter = customer_Mobile != null ?
                new ObjectParameter("Customer_Mobile", customer_Mobile) :
                new ObjectParameter("Customer_Mobile", typeof(string));
    
            var customer_EmailParameter = customer_Email != null ?
                new ObjectParameter("Customer_Email", customer_Email) :
                new ObjectParameter("Customer_Email", typeof(string));
    
            var student_FnameParameter = student_Fname != null ?
                new ObjectParameter("Student_Fname", student_Fname) :
                new ObjectParameter("Student_Fname", typeof(string));
    
            var student_MnameParameter = student_Mname != null ?
                new ObjectParameter("Student_Mname", student_Mname) :
                new ObjectParameter("Student_Mname", typeof(string));
    
            var student_LnameParameter = student_Lname != null ?
                new ObjectParameter("Student_Lname", student_Lname) :
                new ObjectParameter("Student_Lname", typeof(string));
    
            var school_NameParameter = school_Name != null ?
                new ObjectParameter("School_Name", school_Name) :
                new ObjectParameter("School_Name", typeof(string));
    
            var standard_NameParameter = standard_Name != null ?
                new ObjectParameter("Standard_Name", standard_Name) :
                new ObjectParameter("Standard_Name", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var awbNoParameter = awbNo != null ?
                new ObjectParameter("AwbNo", awbNo) :
                new ObjectParameter("AwbNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DirectorySmartFilter_Result>("usp_DirectorySmartFilter", customer_FnameParameter, customer_LnameParameter, customer_MobileParameter, customer_EmailParameter, student_FnameParameter, student_MnameParameter, student_LnameParameter, school_NameParameter, standard_NameParameter, orderNumberParameter, awbNoParameter);
        }
    
        public virtual ObjectResult<usp_DirectorySmartFiltertest_Result> usp_DirectorySmartFiltertest(string customer_Fname, string customer_Lname, string customer_Mobile, string customer_Email, string student_Fname, string student_Mname, string student_Lname, string school_Name, string standard_Name, string orderNumber, string awbNo)
        {
            var customer_FnameParameter = customer_Fname != null ?
                new ObjectParameter("Customer_Fname", customer_Fname) :
                new ObjectParameter("Customer_Fname", typeof(string));
    
            var customer_LnameParameter = customer_Lname != null ?
                new ObjectParameter("Customer_Lname", customer_Lname) :
                new ObjectParameter("Customer_Lname", typeof(string));
    
            var customer_MobileParameter = customer_Mobile != null ?
                new ObjectParameter("Customer_Mobile", customer_Mobile) :
                new ObjectParameter("Customer_Mobile", typeof(string));
    
            var customer_EmailParameter = customer_Email != null ?
                new ObjectParameter("Customer_Email", customer_Email) :
                new ObjectParameter("Customer_Email", typeof(string));
    
            var student_FnameParameter = student_Fname != null ?
                new ObjectParameter("Student_Fname", student_Fname) :
                new ObjectParameter("Student_Fname", typeof(string));
    
            var student_MnameParameter = student_Mname != null ?
                new ObjectParameter("Student_Mname", student_Mname) :
                new ObjectParameter("Student_Mname", typeof(string));
    
            var student_LnameParameter = student_Lname != null ?
                new ObjectParameter("Student_Lname", student_Lname) :
                new ObjectParameter("Student_Lname", typeof(string));
    
            var school_NameParameter = school_Name != null ?
                new ObjectParameter("School_Name", school_Name) :
                new ObjectParameter("School_Name", typeof(string));
    
            var standard_NameParameter = standard_Name != null ?
                new ObjectParameter("Standard_Name", standard_Name) :
                new ObjectParameter("Standard_Name", typeof(string));
    
            var orderNumberParameter = orderNumber != null ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(string));
    
            var awbNoParameter = awbNo != null ?
                new ObjectParameter("AwbNo", awbNo) :
                new ObjectParameter("AwbNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DirectorySmartFiltertest_Result>("usp_DirectorySmartFiltertest", customer_FnameParameter, customer_LnameParameter, customer_MobileParameter, customer_EmailParameter, student_FnameParameter, student_MnameParameter, student_LnameParameter, school_NameParameter, standard_NameParameter, orderNumberParameter, awbNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_EmptyCart(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_EmptyCart", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetAllOrdersPaginated_Result> usp_GetAllOrdersPaginated(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> rowSize, Nullable<int> currentPage)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllOrdersPaginated_Result>("usp_GetAllOrdersPaginated", schoolIdParameter, fromDateParameter, toDateParameter, rowSizeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<usp_GetAllOrdersPaginatedForSuerAdmin_Result> usp_GetAllOrdersPaginatedForSuerAdmin(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> rowSize, Nullable<int> currentPage)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllOrdersPaginatedForSuerAdmin_Result>("usp_GetAllOrdersPaginatedForSuerAdmin", fromDateParameter, toDateParameter, rowSizeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<usp_GetAllOrdersPaginatedForSuerAdminWithAWBNO_Result> usp_GetAllOrdersPaginatedForSuerAdminWithAWBNO(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> rowSize, Nullable<int> currentPage)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllOrdersPaginatedForSuerAdminWithAWBNO_Result>("usp_GetAllOrdersPaginatedForSuerAdminWithAWBNO", fromDateParameter, toDateParameter, rowSizeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<usp_GetAllOrdersPaginatedWithAWBNO_Result> usp_GetAllOrdersPaginatedWithAWBNO(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> rowSize, Nullable<int> currentPage)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllOrdersPaginatedWithAWBNO_Result>("usp_GetAllOrdersPaginatedWithAWBNO", schoolIdParameter, fromDateParameter, toDateParameter, rowSizeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<usp_GetAllPackagePaymentModes_Result> usp_GetAllPackagePaymentModes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllPackagePaymentModes_Result>("usp_GetAllPackagePaymentModes");
        }
    
        public virtual ObjectResult<usp_GetAllSchlPackagePaymentModes_Result> usp_GetAllSchlPackagePaymentModes(Nullable<int> schoolid)
        {
            var schoolidParameter = schoolid.HasValue ?
                new ObjectParameter("schoolid", schoolid) :
                new ObjectParameter("schoolid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllSchlPackagePaymentModes_Result>("usp_GetAllSchlPackagePaymentModes", schoolidParameter);
        }
    
        public virtual ObjectResult<usp_GetAllSchoolMultipleAddress_Result> usp_GetAllSchoolMultipleAddress()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllSchoolMultipleAddress_Result>("usp_GetAllSchoolMultipleAddress");
        }
    
        public virtual ObjectResult<usp_GetAllSchoolPaymentModes_Result> usp_GetAllSchoolPaymentModes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllSchoolPaymentModes_Result>("usp_GetAllSchoolPaymentModes");
        }
    
        public virtual ObjectResult<usp_GetAllSchoolShippingCharges_Result> usp_GetAllSchoolShippingCharges()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllSchoolShippingCharges_Result>("usp_GetAllSchoolShippingCharges");
        }
    
        public virtual ObjectResult<usp_GetAllTickets_Result> usp_GetAllTickets(Nullable<int> lastId)
        {
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllTickets_Result>("usp_GetAllTickets", lastIdParameter);
        }
    
        public virtual ObjectResult<usp_GetAwbnoOrderDetails_Result> usp_GetAwbnoOrderDetails(string awbno)
        {
            var awbnoParameter = awbno != null ?
                new ObjectParameter("Awbno", awbno) :
                new ObjectParameter("Awbno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAwbnoOrderDetails_Result>("usp_GetAwbnoOrderDetails", awbnoParameter);
        }
    
        public virtual ObjectResult<usp_GetAwbnoOrderDetailsForRunnerBoy_Result> usp_GetAwbnoOrderDetailsForRunnerBoy(string awbno, Nullable<int> userId)
        {
            var awbnoParameter = awbno != null ?
                new ObjectParameter("Awbno", awbno) :
                new ObjectParameter("Awbno", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAwbnoOrderDetailsForRunnerBoy_Result>("usp_GetAwbnoOrderDetailsForRunnerBoy", awbnoParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_GetB2BOrders_Result> usp_GetB2BOrders(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> lastId, Nullable<int> packageId, Nullable<int> supplierId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetB2BOrders_Result>("usp_GetB2BOrders", schoolIdParameter, fromDateParameter, toDateParameter, lastIdParameter, packageIdParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetB2BOrdersExporting_Result> usp_GetB2BOrdersExporting(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> lastId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetB2BOrdersExporting_Result>("usp_GetB2BOrdersExporting", fromDateParameter, toDateParameter, lastIdParameter);
        }
    
        public virtual ObjectResult<usp_GetB2BOrdersWithReplaceFlag_Result> usp_GetB2BOrdersWithReplaceFlag(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> lastId, Nullable<int> packageId, Nullable<int> supplierId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetB2BOrdersWithReplaceFlag_Result>("usp_GetB2BOrdersWithReplaceFlag", schoolIdParameter, fromDateParameter, toDateParameter, lastIdParameter, packageIdParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCartCustomerList_Result> usp_GetCartCustomerList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCartCustomerList_Result>("usp_GetCartCustomerList");
        }
    
        public virtual ObjectResult<usp_GetCategoryFilter_Result> usp_GetCategoryFilter(Nullable<int> categoryId, Nullable<int> customerId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCategoryFilter_Result>("usp_GetCategoryFilter", categoryIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCategoryList_Result> usp_GetCategoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCategoryList_Result>("usp_GetCategoryList");
        }
    
        public virtual ObjectResult<usp_GetCategoryMappingBrands_Result> usp_GetCategoryMappingBrands(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCategoryMappingBrands_Result>("usp_GetCategoryMappingBrands", categoryIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCategoryMappingSubCategory_Result> usp_GetCategoryMappingSubCategory(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCategoryMappingSubCategory_Result>("usp_GetCategoryMappingSubCategory", categoryIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCategoryWiseContentForCustomization_Result> usp_GetCategoryWiseContentForCustomization(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCategoryWiseContentForCustomization_Result>("usp_GetCategoryWiseContentForCustomization", categoryIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCategoryWiseProductsWithCustomerWishlistCount_Result> usp_GetCategoryWiseProductsWithCustomerWishlistCount(Nullable<int> customerId, Nullable<int> categoryId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCategoryWiseProductsWithCustomerWishlistCount_Result>("usp_GetCategoryWiseProductsWithCustomerWishlistCount", customerIdParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCertificateDetails_Result> usp_GetCertificateDetails(Nullable<int> schoolStuffDonationId, Nullable<int> points)
        {
            var schoolStuffDonationIdParameter = schoolStuffDonationId.HasValue ?
                new ObjectParameter("SchoolStuffDonationId", schoolStuffDonationId) :
                new ObjectParameter("SchoolStuffDonationId", typeof(int));
    
            var pointsParameter = points.HasValue ?
                new ObjectParameter("Points", points) :
                new ObjectParameter("Points", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCertificateDetails_Result>("usp_GetCertificateDetails", schoolStuffDonationIdParameter, pointsParameter);
        }
    
        public virtual ObjectResult<usp_GetCouponTypeList_Result> usp_GetCouponTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCouponTypeList_Result>("usp_GetCouponTypeList");
        }
    
        public virtual ObjectResult<usp_GetCourierAssignableOrders_Result> usp_GetCourierAssignableOrders(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> lastId, Nullable<int> courierId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCourierAssignableOrders_Result>("usp_GetCourierAssignableOrders", schoolIdParameter, fromDateParameter, toDateParameter, lastIdParameter, courierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCourierOrders_Result> usp_GetCourierOrders(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> lastId, Nullable<int> courierId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCourierOrders_Result>("usp_GetCourierOrders", fromDateParameter, toDateParameter, lastIdParameter, courierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerAllOrders_Result> usp_GetCustomerAllOrders(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerAllOrders_Result>("usp_GetCustomerAllOrders", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerCartPackagesList_Result> usp_GetCustomerCartPackagesList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerCartPackagesList_Result>("usp_GetCustomerCartPackagesList", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerCartProductsList_Result> usp_GetCustomerCartProductsList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerCartProductsList_Result>("usp_GetCustomerCartProductsList", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerCartProductsListNew_Result> usp_GetCustomerCartProductsListNew(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerCartProductsListNew_Result>("usp_GetCustomerCartProductsListNew", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerDetails_Result> usp_GetCustomerDetails(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerDetails_Result>("usp_GetCustomerDetails", emailIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerInvoice_Result> usp_GetCustomerInvoice(Nullable<int> cId)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("CId", cId) :
                new ObjectParameter("CId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerInvoice_Result>("usp_GetCustomerInvoice", cIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerMappingProductList_Result> usp_GetCustomerMappingProductList(Nullable<int> customerId, Nullable<int> schoolId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerMappingProductList_Result>("usp_GetCustomerMappingProductList", customerIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerNotificationList_Result> usp_GetCustomerNotificationList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerNotificationList_Result>("usp_GetCustomerNotificationList", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerScholarshipPointDetails_Result> usp_GetCustomerScholarshipPointDetails(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerScholarshipPointDetails_Result>("usp_GetCustomerScholarshipPointDetails", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerSchoolStandards_Result> usp_GetCustomerSchoolStandards(Nullable<int> customerId, Nullable<int> schoolId, Nullable<int> schoolModelId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var schoolModelIdParameter = schoolModelId.HasValue ?
                new ObjectParameter("SchoolModelId", schoolModelId) :
                new ObjectParameter("SchoolModelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerSchoolStandards_Result>("usp_GetCustomerSchoolStandards", customerIdParameter, schoolIdParameter, schoolModelIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomersList_Result> usp_GetCustomersList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomersList_Result>("usp_GetCustomersList");
        }
    
        public virtual ObjectResult<usp_GetCustomersListPagination_Result> usp_GetCustomersListPagination(Nullable<int> rowSize, Nullable<int> currentPage)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomersListPagination_Result>("usp_GetCustomersListPagination", rowSizeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomersListWithOrderCount_Result> usp_GetCustomersListWithOrderCount(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> standardId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomersListWithOrderCount_Result>("usp_GetCustomersListWithOrderCount", fromDateParameter, toDateParameter, standardIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomersLoginHistory_Result> usp_GetCustomersLoginHistory(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomersLoginHistory_Result>("usp_GetCustomersLoginHistory", nameParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomersPaginatedList_Result> usp_GetCustomersPaginatedList(Nullable<int> lastCustomerId)
        {
            var lastCustomerIdParameter = lastCustomerId.HasValue ?
                new ObjectParameter("LastCustomerId", lastCustomerId) :
                new ObjectParameter("LastCustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomersPaginatedList_Result>("usp_GetCustomersPaginatedList", lastCustomerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerWishlist_Result> usp_GetCustomerWishlist(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerWishlist_Result>("usp_GetCustomerWishlist", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetCustomerWishlistNew_Result> usp_GetCustomerWishlistNew(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCustomerWishlistNew_Result>("usp_GetCustomerWishlistNew", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetDashboardCountsByCustomer_Result> usp_GetDashboardCountsByCustomer(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDashboardCountsByCustomer_Result>("usp_GetDashboardCountsByCustomer", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetDataOperatorsList_Result> usp_GetDataOperatorsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDataOperatorsList_Result>("usp_GetDataOperatorsList");
        }
    
        public virtual ObjectResult<usp_GetDataOperatorsListReport_Result> usp_GetDataOperatorsListReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDataOperatorsListReport_Result>("usp_GetDataOperatorsListReport");
        }
    
        public virtual ObjectResult<usp_GetDatewiseCourierAllocationStat_Result> usp_GetDatewiseCourierAllocationStat(Nullable<int> courierId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDatewiseCourierAllocationStat_Result>("usp_GetDatewiseCourierAllocationStat", courierIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetDispatchedOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetDispatchedOrders");
        }
    
        public virtual ObjectResult<usp_GetFCMTokens_Result> usp_GetFCMTokens(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFCMTokens_Result>("usp_GetFCMTokens", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetFileUrl_Result> usp_GetFileUrl(Nullable<int> orders_Mapping_Product_Package_Mapping_ProductId)
        {
            var orders_Mapping_Product_Package_Mapping_ProductIdParameter = orders_Mapping_Product_Package_Mapping_ProductId.HasValue ?
                new ObjectParameter("Orders_Mapping_Product_Package_Mapping_ProductId", orders_Mapping_Product_Package_Mapping_ProductId) :
                new ObjectParameter("Orders_Mapping_Product_Package_Mapping_ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFileUrl_Result>("usp_GetFileUrl", orders_Mapping_Product_Package_Mapping_ProductIdParameter);
        }
    
        public virtual ObjectResult<usp_GetFilterCriterias_Result> usp_GetFilterCriterias(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFilterCriterias_Result>("usp_GetFilterCriterias", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetFilteredProducts_Result> usp_GetFilteredProducts(Nullable<int> cUSTOMERID, string term, Nullable<int> type)
        {
            var cUSTOMERIDParameter = cUSTOMERID.HasValue ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(int));
    
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFilteredProducts_Result>("usp_GetFilteredProducts", cUSTOMERIDParameter, termParameter, typeParameter);
        }
    
        public virtual int usp_GetFilteredProductsForAPI(Nullable<int> customerId, Nullable<int> categoryId, Nullable<int> maxAge, Nullable<int> minAge, Nullable<int> maxPrice, Nullable<int> minPrice, string brand, string board, string subCategory, string standard, string schoolId, Nullable<int> pageNumber, Nullable<int> productsCount, string sorting_Type)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var maxAgeParameter = maxAge.HasValue ?
                new ObjectParameter("MaxAge", maxAge) :
                new ObjectParameter("MaxAge", typeof(int));
    
            var minAgeParameter = minAge.HasValue ?
                new ObjectParameter("MinAge", minAge) :
                new ObjectParameter("MinAge", typeof(int));
    
            var maxPriceParameter = maxPrice.HasValue ?
                new ObjectParameter("MaxPrice", maxPrice) :
                new ObjectParameter("MaxPrice", typeof(int));
    
            var minPriceParameter = minPrice.HasValue ?
                new ObjectParameter("MinPrice", minPrice) :
                new ObjectParameter("MinPrice", typeof(int));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var boardParameter = board != null ?
                new ObjectParameter("Board", board) :
                new ObjectParameter("Board", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var standardParameter = standard != null ?
                new ObjectParameter("Standard", standard) :
                new ObjectParameter("Standard", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var productsCountParameter = productsCount.HasValue ?
                new ObjectParameter("ProductsCount", productsCount) :
                new ObjectParameter("ProductsCount", typeof(int));
    
            var sorting_TypeParameter = sorting_Type != null ?
                new ObjectParameter("Sorting_Type", sorting_Type) :
                new ObjectParameter("Sorting_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetFilteredProductsForAPI", customerIdParameter, categoryIdParameter, maxAgeParameter, minAgeParameter, maxPriceParameter, minPriceParameter, brandParameter, boardParameter, subCategoryParameter, standardParameter, schoolIdParameter, pageNumberParameter, productsCountParameter, sorting_TypeParameter);
        }
    
        public virtual int usp_GetFilteredProductsPaginated(Nullable<int> customerId, Nullable<int> categoryId, Nullable<int> maxAge, Nullable<int> minAge, Nullable<int> maxPrice, Nullable<int> minPrice, string brand, string board, string subCategory, string standard, string schoolId, Nullable<int> pageNumber, Nullable<int> productsCount, string sorting_Type)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var maxAgeParameter = maxAge.HasValue ?
                new ObjectParameter("MaxAge", maxAge) :
                new ObjectParameter("MaxAge", typeof(int));
    
            var minAgeParameter = minAge.HasValue ?
                new ObjectParameter("MinAge", minAge) :
                new ObjectParameter("MinAge", typeof(int));
    
            var maxPriceParameter = maxPrice.HasValue ?
                new ObjectParameter("MaxPrice", maxPrice) :
                new ObjectParameter("MaxPrice", typeof(int));
    
            var minPriceParameter = minPrice.HasValue ?
                new ObjectParameter("MinPrice", minPrice) :
                new ObjectParameter("MinPrice", typeof(int));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var boardParameter = board != null ?
                new ObjectParameter("Board", board) :
                new ObjectParameter("Board", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var standardParameter = standard != null ?
                new ObjectParameter("Standard", standard) :
                new ObjectParameter("Standard", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var productsCountParameter = productsCount.HasValue ?
                new ObjectParameter("ProductsCount", productsCount) :
                new ObjectParameter("ProductsCount", typeof(int));
    
            var sorting_TypeParameter = sorting_Type != null ?
                new ObjectParameter("Sorting_Type", sorting_Type) :
                new ObjectParameter("Sorting_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetFilteredProductsPaginated", customerIdParameter, categoryIdParameter, maxAgeParameter, minAgeParameter, maxPriceParameter, minPriceParameter, brandParameter, boardParameter, subCategoryParameter, standardParameter, schoolIdParameter, pageNumberParameter, productsCountParameter, sorting_TypeParameter);
        }
    
        public virtual ObjectResult<usp_GetFilteredTickets_Result> usp_GetFilteredTickets(Nullable<int> schoolId, Nullable<int> ticketCategoryId, Nullable<int> ticketSourceId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var ticketCategoryIdParameter = ticketCategoryId.HasValue ?
                new ObjectParameter("TicketCategoryId", ticketCategoryId) :
                new ObjectParameter("TicketCategoryId", typeof(int));
    
            var ticketSourceIdParameter = ticketSourceId.HasValue ?
                new ObjectParameter("TicketSourceId", ticketSourceId) :
                new ObjectParameter("TicketSourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFilteredTickets_Result>("usp_GetFilteredTickets", schoolIdParameter, ticketCategoryIdParameter, ticketSourceIdParameter);
        }
    
        public virtual ObjectResult<usp_GetGSTReoprt_Result> usp_GetGSTReoprt(string type, Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGSTReoprt_Result>("usp_GetGSTReoprt", typeParameter, schoolIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetGSTReport_Result> usp_GetGSTReport(Nullable<int> supplierId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGSTReport_Result>("usp_GetGSTReport", supplierIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<string> usp_GETJsonOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GETJsonOrders");
        }
    
        public virtual int usp_GetLabelDetails(string orderIds)
        {
            var orderIdsParameter = orderIds != null ?
                new ObjectParameter("OrderIds", orderIds) :
                new ObjectParameter("OrderIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetLabelDetails", orderIdsParameter);
        }
    
        public virtual ObjectResult<usp_GetLogisticsStastics_Result> usp_GetLogisticsStastics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetLogisticsStastics_Result>("usp_GetLogisticsStastics");
        }
    
        public virtual ObjectResult<usp_GetMISReports_Result> usp_GetMISReports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMISReports_Result>("usp_GetMISReports");
        }
    
        public virtual ObjectResult<usp_GetMISReportsNew_Result> usp_GetMISReportsNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMISReportsNew_Result>("usp_GetMISReportsNew");
        }
    
        public virtual ObjectResult<usp_GetMobileAndFcmKeyForCouponNotificationList_Result> usp_GetMobileAndFcmKeyForCouponNotificationList(Nullable<int> couponId, Nullable<int> schoolId)
        {
            var couponIdParameter = couponId.HasValue ?
                new ObjectParameter("CouponId", couponId) :
                new ObjectParameter("CouponId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMobileAndFcmKeyForCouponNotificationList_Result>("usp_GetMobileAndFcmKeyForCouponNotificationList", couponIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetModelWiseSchoolList_Result> usp_GetModelWiseSchoolList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetModelWiseSchoolList_Result>("usp_GetModelWiseSchoolList");
        }
    
        public virtual ObjectResult<usp_GetModelWiseSchoolListWithVendor_Result> usp_GetModelWiseSchoolListWithVendor(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetModelWiseSchoolListWithVendor_Result>("usp_GetModelWiseSchoolListWithVendor", schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetModelWiseStandSubjList_Result> usp_GetModelWiseStandSubjList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetModelWiseStandSubjList_Result>("usp_GetModelWiseStandSubjList");
        }
    
        public virtual ObjectResult<usp_GetNewOrdersProductReport_Result> usp_GetNewOrdersProductReport(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetNewOrdersProductReport_Result>("usp_GetNewOrdersProductReport", schoolIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderChangeStatusList_Result> usp_GetOrderChangeStatusList(Nullable<int> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderChangeStatusList_Result>("usp_GetOrderChangeStatusList", oRDERIDParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderDeliveryFeedbackList_Result> usp_GetOrderDeliveryFeedbackList(Nullable<int> p1, Nullable<int> p2)
        {
            var p1Parameter = p1.HasValue ?
                new ObjectParameter("p1", p1) :
                new ObjectParameter("p1", typeof(int));
    
            var p2Parameter = p2.HasValue ?
                new ObjectParameter("p2", p2) :
                new ObjectParameter("p2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderDeliveryFeedbackList_Result>("usp_GetOrderDeliveryFeedbackList", p1Parameter, p2Parameter);
        }
    
        public virtual ObjectResult<string> usp_GetOrderDiscountBifurcation(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetOrderDiscountBifurcation", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderEmail_Result> usp_GetOrderEmail(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderEmail_Result>("usp_GetOrderEmail", orderIdParameter);
        }
    
        public virtual int usp_GetOrderEmailBody(string orderIds, string emailBody)
        {
            var orderIdsParameter = orderIds != null ?
                new ObjectParameter("OrderIds", orderIds) :
                new ObjectParameter("OrderIds", typeof(string));
    
            var emailBodyParameter = emailBody != null ?
                new ObjectParameter("EmailBody", emailBody) :
                new ObjectParameter("EmailBody", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetOrderEmailBody", orderIdsParameter, emailBodyParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderForVXpressByOrder_Result> usp_GetOrderForVXpressByOrder(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderForVXpressByOrder_Result>("usp_GetOrderForVXpressByOrder", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderLogisticsStatus_Result> usp_GetOrderLogisticsStatus(Nullable<int> rowSize, Nullable<int> currentPage)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderLogisticsStatus_Result>("usp_GetOrderLogisticsStatus", rowSizeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderOptionalProducts_Result> usp_GetOrderOptionalProducts(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> supplierId, Nullable<int> schoolId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderOptionalProducts_Result>("usp_GetOrderOptionalProducts", fromDateParameter, toDateParameter, supplierIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderPackageProductList_Result> usp_GetOrderPackageProductList(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderPackageProductList_Result>("usp_GetOrderPackageProductList", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderPackedEmail_Result> usp_GetOrderPackedEmail(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderPackedEmail_Result>("usp_GetOrderPackedEmail", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderPaymentModeAndPaymentStatusAndOrderStatus_Result> usp_GetOrderPaymentModeAndPaymentStatusAndOrderStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderPaymentModeAndPaymentStatusAndOrderStatus_Result>("usp_GetOrderPaymentModeAndPaymentStatusAndOrderStatus");
        }
    
        public virtual ObjectResult<usp_GetOrderPaymentModeList_Result> usp_GetOrderPaymentModeList(Nullable<int> lastId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderPaymentModeList_Result>("usp_GetOrderPaymentModeList", lastIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProducts_Result> usp_GetOrderProducts(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProducts_Result>("usp_GetOrderProducts", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsByCategory_Result> usp_GetOrderProductsByCategory(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> supplierId, Nullable<int> schoolId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsByCategory_Result>("usp_GetOrderProductsByCategory", fromDateParameter, toDateParameter, supplierIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsByCategoryAndISBN_Result> usp_GetOrderProductsByCategoryAndISBN(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> supplierId, Nullable<int> schoolId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsByCategoryAndISBN_Result>("usp_GetOrderProductsByCategoryAndISBN", fromDateParameter, toDateParameter, supplierIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsCourier_Result> usp_GetOrderProductsCourier(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> courierCompanyId, Nullable<int> schoolId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var courierCompanyIdParameter = courierCompanyId.HasValue ?
                new ObjectParameter("CourierCompanyId", courierCompanyId) :
                new ObjectParameter("CourierCompanyId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsCourier_Result>("usp_GetOrderProductsCourier", fromDateParameter, toDateParameter, courierCompanyIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsNew_Result> usp_GetOrderProductsNew(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsNew_Result>("usp_GetOrderProductsNew", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsNewUnique_Result> usp_GetOrderProductsNewUnique(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsNewUnique_Result>("usp_GetOrderProductsNewUnique", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsOLD_Result> usp_GetOrderProductsOLD(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsOLD_Result>("usp_GetOrderProductsOLD", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsWithAvailability_Result> usp_GetOrderProductsWithAvailability(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsWithAvailability_Result>("usp_GetOrderProductsWithAvailability", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFag_Result> usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFag(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFag_Result>("usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFag", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFagAndPurchaseFromMarketFlag_Result> usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFagAndPurchaseFromMarketFlag(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFagAndPurchaseFromMarketFlag_Result>("usp_GetOrderProductsWithAvailabilityWithDisplayUnitPriceFagAndPurchaseFromMarketFlag", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsWithAvailableStatus_Result> usp_GetOrderProductsWithAvailableStatus(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsWithAvailableStatus_Result>("usp_GetOrderProductsWithAvailableStatus", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderProductsWithCategory_Result> usp_GetOrderProductsWithCategory(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderProductsWithCategory_Result>("usp_GetOrderProductsWithCategory", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_getOrderRefundHistory_Result> usp_getOrderRefundHistory(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getOrderRefundHistory_Result>("usp_getOrderRefundHistory", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderShippingStatus_Result> usp_GetOrderShippingStatus(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderShippingStatus_Result>("usp_GetOrderShippingStatus", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderShippingStatusWise_Result> usp_GetOrderShippingStatusWise(Nullable<int> shippingStatusId, Nullable<int> supplierId)
        {
            var shippingStatusIdParameter = shippingStatusId.HasValue ?
                new ObjectParameter("ShippingStatusId", shippingStatusId) :
                new ObjectParameter("ShippingStatusId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderShippingStatusWise_Result>("usp_GetOrderShippingStatusWise", shippingStatusIdParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderShippingStatusWithRanking_Result> usp_GetOrderShippingStatusWithRanking(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderShippingStatusWithRanking_Result>("usp_GetOrderShippingStatusWithRanking", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrdersProductReport_Result> usp_GetOrdersProductReport(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrdersProductReport_Result>("usp_GetOrdersProductReport", schoolIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderUpdateEmail_Result> usp_GetOrderUpdateEmail(Nullable<int> orderId, string emailBody, string subject)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var emailBodyParameter = emailBody != null ?
                new ObjectParameter("EmailBody", emailBody) :
                new ObjectParameter("EmailBody", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderUpdateEmail_Result>("usp_GetOrderUpdateEmail", orderIdParameter, emailBodyParameter, subjectParameter);
        }
    
        public virtual ObjectResult<usp_GetOrderWiseLogisticsStatusBySchool_Result> usp_GetOrderWiseLogisticsStatusBySchool(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrderWiseLogisticsStatusBySchool_Result>("usp_GetOrderWiseLogisticsStatusBySchool", schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_getOrderWithRefundableAmount_Result> usp_getOrderWithRefundableAmount(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getOrderWithRefundableAmount_Result>("usp_getOrderWithRefundableAmount", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageDetails_Result> usp_GetPackageDetails(Nullable<int> customerId, Nullable<int> schoolId, Nullable<int> packageId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageDetails_Result>("usp_GetPackageDetails", customerIdParameter, schoolIdParameter, packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageDetailsList_Result> usp_GetPackageDetailsList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageDetailsList_Result>("usp_GetPackageDetailsList", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageDetailsListSupplierWise_Result> usp_GetPackageDetailsListSupplierWise(Nullable<int> customerId, Nullable<int> supplierId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageDetailsListSupplierWise_Result>("usp_GetPackageDetailsListSupplierWise", customerIdParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageDetailsListSupplierWiseNew_Result> usp_GetPackageDetailsListSupplierWiseNew(Nullable<int> customerId, Nullable<int> supplierId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageDetailsListSupplierWiseNew_Result>("usp_GetPackageDetailsListSupplierWiseNew", customerIdParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPAckageDetailsWithProductList_Result> usp_GetPAckageDetailsWithProductList(Nullable<int> customerId, Nullable<int> packageId, Nullable<int> schoolId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPAckageDetailsWithProductList_Result>("usp_GetPAckageDetailsWithProductList", customerIdParameter, packageIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageDetailsWithProductListNew_Result> usp_GetPackageDetailsWithProductListNew(Nullable<int> customerId, Nullable<int> packageId, Nullable<int> schoolId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageDetailsWithProductListNew_Result>("usp_GetPackageDetailsWithProductListNew", customerIdParameter, packageIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageFeedback_Result> usp_GetPackageFeedback(Nullable<int> packageId, Nullable<int> customerId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageFeedback_Result>("usp_GetPackageFeedback", packageIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageFeedbackList_Result> usp_GetPackageFeedbackList(Nullable<int> packageId, Nullable<int> customerId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageFeedbackList_Result>("usp_GetPackageFeedbackList", packageIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageHighlights_Result> usp_GetPackageHighlights(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageHighlights_Result>("usp_GetPackageHighlights", packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageMappingProducList_Result> usp_GetPackageMappingProducList(Nullable<int> supplierId, Nullable<int> packageId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageMappingProducList_Result>("usp_GetPackageMappingProducList", supplierIdParameter, packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageMappingProducListNew_Result> usp_GetPackageMappingProducListNew(Nullable<int> supplierId, Nullable<int> packageId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageMappingProducListNew_Result>("usp_GetPackageMappingProducListNew", supplierIdParameter, packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageMappingProductListForCustomization_Result> usp_GetPackageMappingProductListForCustomization(Nullable<int> supplierId, Nullable<int> packageId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageMappingProductListForCustomization_Result>("usp_GetPackageMappingProductListForCustomization", supplierIdParameter, packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageMappingProductListForCustomizationWithMarketPurchaseFlag_Result> usp_GetPackageMappingProductListForCustomizationWithMarketPurchaseFlag(Nullable<int> supplierId, Nullable<int> packageId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageMappingProductListForCustomizationWithMarketPurchaseFlag_Result>("usp_GetPackageMappingProductListForCustomizationWithMarketPurchaseFlag", supplierIdParameter, packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageOfPackageDetailsWithProductList_Result> usp_GetPackageOfPackageDetailsWithProductList(Nullable<int> customerId, Nullable<int> package_Of_PackageId, Nullable<int> schoolId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var package_Of_PackageIdParameter = package_Of_PackageId.HasValue ?
                new ObjectParameter("Package_Of_PackageId", package_Of_PackageId) :
                new ObjectParameter("Package_Of_PackageId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageOfPackageDetailsWithProductList_Result>("usp_GetPackageOfPackageDetailsWithProductList", customerIdParameter, package_Of_PackageIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageOfPackagesBySchoolAndStandard_Result> usp_GetPackageOfPackagesBySchoolAndStandard(Nullable<int> schoolId, Nullable<int> standardId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageOfPackagesBySchoolAndStandard_Result>("usp_GetPackageOfPackagesBySchoolAndStandard", schoolIdParameter, standardIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageOrderEmail_Result> usp_GetPackageOrderEmail(Nullable<int> packageid, string emailBody, string subject)
        {
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("Packageid", packageid) :
                new ObjectParameter("Packageid", typeof(int));
    
            var emailBodyParameter = emailBody != null ?
                new ObjectParameter("EmailBody", emailBody) :
                new ObjectParameter("EmailBody", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageOrderEmail_Result>("usp_GetPackageOrderEmail", packageidParameter, emailBodyParameter, subjectParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageOrdersForEmail_Result> usp_GetPackageOrdersForEmail(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageOrdersForEmail_Result>("usp_GetPackageOrdersForEmail", packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageProductList_Result> usp_GetPackageProductList(Nullable<int> customerId, Nullable<int> packageId, Nullable<int> schoolId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageProductList_Result>("usp_GetPackageProductList", customerIdParameter, packageIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageRatings_Result> usp_GetPackageRatings(Nullable<int> packageId, Nullable<int> customerId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageRatings_Result>("usp_GetPackageRatings", packageIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackagesList_Result> usp_GetPackagesList(Nullable<int> rowSize, Nullable<int> currentPage, Nullable<int> supplierId)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackagesList_Result>("usp_GetPackagesList", rowSizeParameter, currentPageParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackagesListNew_Result> usp_GetPackagesListNew(Nullable<int> rowSize, Nullable<int> currentPage, Nullable<int> supplierId)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackagesListNew_Result>("usp_GetPackagesListNew", rowSizeParameter, currentPageParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPackageWisePaymentModes_Result> usp_GetPackageWisePaymentModes(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPackageWisePaymentModes_Result>("usp_GetPackageWisePaymentModes", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPendingProductReport_Result> usp_GetPendingProductReport(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPendingProductReport_Result>("usp_GetPendingProductReport", schoolIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetPortalHomePageCustomizationContent_Result> usp_GetPortalHomePageCustomizationContent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPortalHomePageCustomizationContent_Result>("usp_GetPortalHomePageCustomizationContent");
        }
    
        public virtual ObjectResult<string> usp_GetPrivacyContent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetPrivacyContent");
        }
    
        public virtual ObjectResult<usp_GetProductComissionList_Result> usp_GetProductComissionList(Nullable<int> packageId, Nullable<int> schoolId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductComissionList_Result>("usp_GetProductComissionList", packageIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetProductDetails_Result> usp_GetProductDetails(Nullable<int> productId, Nullable<int> customerId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductDetails_Result>("usp_GetProductDetails", productIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetProductFeedbackList_Result> usp_GetProductFeedbackList(Nullable<int> productId, Nullable<int> customerId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductFeedbackList_Result>("usp_GetProductFeedbackList", productIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetProductHighlights_Result> usp_GetProductHighlights(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductHighlights_Result>("usp_GetProductHighlights", productIdParameter);
        }
    
        public virtual ObjectResult<usp_GetProductImages_Result> usp_GetProductImages(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductImages_Result>("usp_GetProductImages", productIdParameter);
        }
    
        public virtual ObjectResult<usp_GetProductListPaginated_Result> usp_GetProductListPaginated(Nullable<int> rowSize, Nullable<int> currentPage, Nullable<int> supplierId)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductListPaginated_Result>("usp_GetProductListPaginated", rowSizeParameter, currentPageParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetProductRatings_Result> usp_GetProductRatings(Nullable<int> productId, Nullable<int> customerId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductRatings_Result>("usp_GetProductRatings", productIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetProductsForOrders_Result> usp_GetProductsForOrders(Nullable<int> oRDERID)
        {
            var oRDERIDParameter = oRDERID.HasValue ?
                new ObjectParameter("ORDERID", oRDERID) :
                new ObjectParameter("ORDERID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductsForOrders_Result>("usp_GetProductsForOrders", oRDERIDParameter);
        }
    
        public virtual ObjectResult<usp_GetProductSpecifications_Result> usp_GetProductSpecifications(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductSpecifications_Result>("usp_GetProductSpecifications", productIdParameter);
        }
    
        public virtual ObjectResult<usp_GetPublishersNonUploadedBooks_Result> usp_GetPublishersNonUploadedBooks(Nullable<int> publisherId)
        {
            var publisherIdParameter = publisherId.HasValue ?
                new ObjectParameter("PublisherId", publisherId) :
                new ObjectParameter("PublisherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPublishersNonUploadedBooks_Result>("usp_GetPublishersNonUploadedBooks", publisherIdParameter);
        }
    
        public virtual ObjectResult<usp_GetReedemableProductList_Result> usp_GetReedemableProductList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetReedemableProductList_Result>("usp_GetReedemableProductList", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetRefundReport_Result> usp_GetRefundReport(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> lastId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetRefundReport_Result>("usp_GetRefundReport", schoolIdParameter, fromDateParameter, toDateParameter, lastIdParameter);
        }
    
        public virtual ObjectResult<usp_GetRunnerBoyCourierList_Result> usp_GetRunnerBoyCourierList(Nullable<int> userId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> lastId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetRunnerBoyCourierList_Result>("usp_GetRunnerBoyCourierList", userIdParameter, fromDateParameter, toDateParameter, lastIdParameter);
        }
    
        public virtual ObjectResult<usp_GetRunnerBoyStats_Result> usp_GetRunnerBoyStats(Nullable<int> courierId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetRunnerBoyStats_Result>("usp_GetRunnerBoyStats", courierIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<string> usp_GetScholarshipPointContent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetScholarshipPointContent");
        }
    
        public virtual ObjectResult<usp_GetSchoolComissionWithShippingStatusAndPaymentMode_Result> usp_GetSchoolComissionWithShippingStatusAndPaymentMode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolComissionWithShippingStatusAndPaymentMode_Result>("usp_GetSchoolComissionWithShippingStatusAndPaymentMode");
        }
    
        public virtual ObjectResult<usp_GetSchoolComissionWithShippingStatusAndPaymentModeWithDateFilter_Result> usp_GetSchoolComissionWithShippingStatusAndPaymentModeWithDateFilter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> supplierId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolComissionWithShippingStatusAndPaymentModeWithDateFilter_Result>("usp_GetSchoolComissionWithShippingStatusAndPaymentModeWithDateFilter", fromDateParameter, toDateParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolCustomersListPagination_Result> usp_GetSchoolCustomersListPagination(Nullable<int> rowSize, Nullable<int> currentPage, Nullable<int> schoolId)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolCustomersListPagination_Result>("usp_GetSchoolCustomersListPagination", rowSizeParameter, currentPageParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolCustomersListPaginationWithStudentID_Result> usp_GetSchoolCustomersListPaginationWithStudentID(Nullable<int> rowSize, Nullable<int> currentPage, Nullable<int> schoolId)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolCustomersListPaginationWithStudentID_Result>("usp_GetSchoolCustomersListPaginationWithStudentID", rowSizeParameter, currentPageParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolCustomersListPaginationWithStudentIDWithStandardId_Result> usp_GetSchoolCustomersListPaginationWithStudentIDWithStandardId(Nullable<int> rowSize, Nullable<int> currentPage, Nullable<int> schoolId, Nullable<int> standardId)
        {
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolCustomersListPaginationWithStudentIDWithStandardId_Result>("usp_GetSchoolCustomersListPaginationWithStudentIDWithStandardId", rowSizeParameter, currentPageParameter, schoolIdParameter, standardIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolList_Result> usp_GetSchoolList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolList_Result>("usp_GetSchoolList");
        }
    
        public virtual ObjectResult<usp_GetSchoolMappingPackageInventory_Result> usp_GetSchoolMappingPackageInventory(Nullable<int> supplierId, Nullable<int> schoolId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolMappingPackageInventory_Result>("usp_GetSchoolMappingPackageInventory", supplierIdParameter, schoolIdParameter);
        }
    
        public virtual int usp_GetSchoolOrders(Nullable<int> schoolid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> lastid, string packageId)
        {
            var schoolidParameter = schoolid.HasValue ?
                new ObjectParameter("Schoolid", schoolid) :
                new ObjectParameter("Schoolid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var lastidParameter = lastid.HasValue ?
                new ObjectParameter("Lastid", lastid) :
                new ObjectParameter("Lastid", typeof(int));
    
            var packageIdParameter = packageId != null ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSchoolOrders", schoolidParameter, fromdateParameter, todateParameter, lastidParameter, packageIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolSettelments_Result> usp_GetSchoolSettelments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolSettelments_Result>("usp_GetSchoolSettelments");
        }
    
        public virtual ObjectResult<usp_GetSchoolSettelmentsNew_Result> usp_GetSchoolSettelmentsNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolSettelmentsNew_Result>("usp_GetSchoolSettelmentsNew");
        }
    
        public virtual ObjectResult<usp_GetSchoolSettelmentsWithShippingCharges_Result> usp_GetSchoolSettelmentsWithShippingCharges()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolSettelmentsWithShippingCharges_Result>("usp_GetSchoolSettelmentsWithShippingCharges");
        }
    
        public virtual ObjectResult<usp_GetSchoolStandards_Result> usp_GetSchoolStandards(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolStandards_Result>("usp_GetSchoolStandards", schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolStandardsMappingSupplier_Result> usp_GetSchoolStandardsMappingSupplier(Nullable<int> supplierId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolStandardsMappingSupplier_Result>("usp_GetSchoolStandardsMappingSupplier", supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolStoreBranchList_Result> usp_GetSchoolStoreBranchList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolStoreBranchList_Result>("usp_GetSchoolStoreBranchList");
        }
    
        public virtual ObjectResult<usp_GetSchoolStoreReaderBooksList_Result> usp_GetSchoolStoreReaderBooksList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolStoreReaderBooksList_Result>("usp_GetSchoolStoreReaderBooksList", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolStoreSchoolWiseStats_Result> usp_GetSchoolStoreSchoolWiseStats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolStoreSchoolWiseStats_Result>("usp_GetSchoolStoreSchoolWiseStats");
        }
    
        public virtual ObjectResult<usp_GetSchoolSupplierSettlementList_Result> usp_GetSchoolSupplierSettlementList(Nullable<int> schoolId, Nullable<int> supplierId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolSupplierSettlementList_Result>("usp_GetSchoolSupplierSettlementList", schoolIdParameter, supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolTicketReporting_Result> usp_GetSchoolTicketReporting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolTicketReporting_Result>("usp_GetSchoolTicketReporting");
        }
    
        public virtual ObjectResult<usp_GetSchoolWiseOrderDetails_Result> usp_GetSchoolWiseOrderDetails(string dELIVERYSTARTDATE, string dELIVERYENDDATE)
        {
            var dELIVERYSTARTDATEParameter = dELIVERYSTARTDATE != null ?
                new ObjectParameter("DELIVERYSTARTDATE", dELIVERYSTARTDATE) :
                new ObjectParameter("DELIVERYSTARTDATE", typeof(string));
    
            var dELIVERYENDDATEParameter = dELIVERYENDDATE != null ?
                new ObjectParameter("DELIVERYENDDATE", dELIVERYENDDATE) :
                new ObjectParameter("DELIVERYENDDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolWiseOrderDetails_Result>("usp_GetSchoolWiseOrderDetails", dELIVERYSTARTDATEParameter, dELIVERYENDDATEParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolWiseOrders_Result> usp_GetSchoolWiseOrders(Nullable<int> schoolID)
        {
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolWiseOrders_Result>("usp_GetSchoolWiseOrders", schoolIDParameter);
        }
    
        public virtual int usp_GetSchoolWiseOrdersForRadClf_Schools(Nullable<int> schoolID)
        {
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSchoolWiseOrdersForRadClf_Schools", schoolIDParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolWiseOrdersForRadClf_SchoolsNew_Result> usp_GetSchoolWiseOrdersForRadClf_SchoolsNew(Nullable<int> schoolID)
        {
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolWiseOrdersForRadClf_SchoolsNew_Result>("usp_GetSchoolWiseOrdersForRadClf_SchoolsNew", schoolIDParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolWiseOrdersWithDateFilter_Result> usp_GetSchoolWiseOrdersWithDateFilter(Nullable<int> schoolID, string fromDate, string toDate)
        {
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolWiseOrdersWithDateFilter_Result>("usp_GetSchoolWiseOrdersWithDateFilter", schoolIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetSchoolWiseOrdersWithDateFilterNew_Result> usp_GetSchoolWiseOrdersWithDateFilterNew(Nullable<int> schoolID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var schoolIDParameter = schoolID.HasValue ?
                new ObjectParameter("SchoolID", schoolID) :
                new ObjectParameter("SchoolID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchoolWiseOrdersWithDateFilterNew_Result>("usp_GetSchoolWiseOrdersWithDateFilterNew", schoolIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int usp_GetSearchFilteredProductsForAPI(Nullable<int> customerId, Nullable<int> categoryId, Nullable<int> maxAge, Nullable<int> minAge, Nullable<int> maxPrice, Nullable<int> minPrice, string brand, string board, string subCategory, string standard, string schoolId, Nullable<int> pageNumber, Nullable<int> productsCount, string sorting_Type, string keyword)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var maxAgeParameter = maxAge.HasValue ?
                new ObjectParameter("MaxAge", maxAge) :
                new ObjectParameter("MaxAge", typeof(int));
    
            var minAgeParameter = minAge.HasValue ?
                new ObjectParameter("MinAge", minAge) :
                new ObjectParameter("MinAge", typeof(int));
    
            var maxPriceParameter = maxPrice.HasValue ?
                new ObjectParameter("MaxPrice", maxPrice) :
                new ObjectParameter("MaxPrice", typeof(int));
    
            var minPriceParameter = minPrice.HasValue ?
                new ObjectParameter("MinPrice", minPrice) :
                new ObjectParameter("MinPrice", typeof(int));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var boardParameter = board != null ?
                new ObjectParameter("Board", board) :
                new ObjectParameter("Board", typeof(string));
    
            var subCategoryParameter = subCategory != null ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(string));
    
            var standardParameter = standard != null ?
                new ObjectParameter("Standard", standard) :
                new ObjectParameter("Standard", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var productsCountParameter = productsCount.HasValue ?
                new ObjectParameter("ProductsCount", productsCount) :
                new ObjectParameter("ProductsCount", typeof(int));
    
            var sorting_TypeParameter = sorting_Type != null ?
                new ObjectParameter("Sorting_Type", sorting_Type) :
                new ObjectParameter("Sorting_Type", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSearchFilteredProductsForAPI", customerIdParameter, categoryIdParameter, maxAgeParameter, minAgeParameter, maxPriceParameter, minPriceParameter, brandParameter, boardParameter, subCategoryParameter, standardParameter, schoolIdParameter, pageNumberParameter, productsCountParameter, sorting_TypeParameter, keywordParameter);
        }
    
        public virtual ObjectResult<usp_GetSentSMS_Result> usp_GetSentSMS(Nullable<int> customerId, string mobileNumber)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSentSMS_Result>("usp_GetSentSMS", customerIdParameter, mobileNumberParameter);
        }
    
        public virtual int usp_GetShoolWiseDailyAnalyticsWithFilter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string schoolIds, string shippingStatusIds, string paymentFormatIds, string supplierIds)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var schoolIdsParameter = schoolIds != null ?
                new ObjectParameter("SchoolIds", schoolIds) :
                new ObjectParameter("SchoolIds", typeof(string));
    
            var shippingStatusIdsParameter = shippingStatusIds != null ?
                new ObjectParameter("ShippingStatusIds", shippingStatusIds) :
                new ObjectParameter("ShippingStatusIds", typeof(string));
    
            var paymentFormatIdsParameter = paymentFormatIds != null ?
                new ObjectParameter("PaymentFormatIds", paymentFormatIds) :
                new ObjectParameter("PaymentFormatIds", typeof(string));
    
            var supplierIdsParameter = supplierIds != null ?
                new ObjectParameter("SupplierIds", supplierIds) :
                new ObjectParameter("SupplierIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetShoolWiseDailyAnalyticsWithFilter", fromDateParameter, toDateParameter, schoolIdsParameter, shippingStatusIdsParameter, paymentFormatIdsParameter, supplierIdsParameter);
        }
    
        public virtual int usp_GetShoolWiseDailyOrderStats(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetShoolWiseDailyOrderStats", fromDateParameter, toDateParameter);
        }
    
        public virtual int usp_GetShoolWiseDailyOrderStatsForAnalytics(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetShoolWiseDailyOrderStatsForAnalytics", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<string> usp_GetSmartImages(string imageName, string supplierName)
        {
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetSmartImages", imageNameParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<usp_GetStadardWiseProductFileList_Result> usp_GetStadardWiseProductFileList(Nullable<int> standardId)
        {
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStadardWiseProductFileList_Result>("usp_GetStadardWiseProductFileList", standardIdParameter);
        }
    
        public virtual ObjectResult<usp_GetStandardProducts_Result> usp_GetStandardProducts(Nullable<int> standardId)
        {
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStandardProducts_Result>("usp_GetStandardProducts", standardIdParameter);
        }
    
        public virtual ObjectResult<usp_GetStudentDetails_Result> usp_GetStudentDetails(string emailId)
        {
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStudentDetails_Result>("usp_GetStudentDetails", emailIdParameter);
        }
    
        public virtual ObjectResult<usp_GetStudentsByCustomer_Result> usp_GetStudentsByCustomer(Nullable<int> customerId, Nullable<int> schoolId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetStudentsByCustomer_Result>("usp_GetStudentsByCustomer", customerIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSubVendorOrdersList_Result> usp_GetSubVendorOrdersList(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> schoolId, Nullable<int> supplierId, Nullable<int> packageId, Nullable<int> subvendorId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var subvendorIdParameter = subvendorId.HasValue ?
                new ObjectParameter("SubvendorId", subvendorId) :
                new ObjectParameter("SubvendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSubVendorOrdersList_Result>("usp_GetSubVendorOrdersList", fromDateParameter, toDateParameter, schoolIdParameter, supplierIdParameter, packageIdParameter, subvendorIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSuperAdminDashboard_Result> usp_GetSuperAdminDashboard(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSuperAdminDashboard_Result>("usp_GetSuperAdminDashboard", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_GetSuperAdminDashboardPaymentFormat_Result> usp_GetSuperAdminDashboardPaymentFormat(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSuperAdminDashboardPaymentFormat_Result>("usp_GetSuperAdminDashboardPaymentFormat", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_GetSuperAdminSchoolDashboard_Result> usp_GetSuperAdminSchoolDashboard(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> schoolId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSuperAdminSchoolDashboard_Result>("usp_GetSuperAdminSchoolDashboard", startDateParameter, endDateParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<string> usp_GetSupplierBannerImages(Nullable<int> suplierId)
        {
            var suplierIdParameter = suplierId.HasValue ?
                new ObjectParameter("SuplierId", suplierId) :
                new ObjectParameter("SuplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetSupplierBannerImages", suplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSupplierDashboard_Result> usp_GetSupplierDashboard(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSupplierDashboard_Result>("usp_GetSupplierDashboard", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetSupplierDashboardWithFilter_Result> usp_GetSupplierDashboardWithFilter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> supplierid)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var supplieridParameter = supplierid.HasValue ?
                new ObjectParameter("Supplierid", supplierid) :
                new ObjectParameter("Supplierid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSupplierDashboardWithFilter_Result>("usp_GetSupplierDashboardWithFilter", fromDateParameter, toDateParameter, supplieridParameter);
        }
    
        public virtual ObjectResult<usp_GetSupplierMappingSchoolStandards_Result> usp_GetSupplierMappingSchoolStandards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSupplierMappingSchoolStandards_Result>("usp_GetSupplierMappingSchoolStandards");
        }
    
        public virtual ObjectResult<usp_GetSupplierOrdersStatusCount_Result> usp_GetSupplierOrdersStatusCount(Nullable<int> supplierId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSupplierOrdersStatusCount_Result>("usp_GetSupplierOrdersStatusCount", supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSuppliersB2COrders_Result> usp_GetSuppliersB2COrders(Nullable<int> supplierId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> rowSize, Nullable<int> currentPage)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var rowSizeParameter = rowSize.HasValue ?
                new ObjectParameter("RowSize", rowSize) :
                new ObjectParameter("RowSize", typeof(int));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSuppliersB2COrders_Result>("usp_GetSuppliersB2COrders", supplierIdParameter, fromDateParameter, toDateParameter, rowSizeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<usp_GetSupplierSchoolStandardsList_Result> usp_GetSupplierSchoolStandardsList(Nullable<int> supplierId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSupplierSchoolStandardsList_Result>("usp_GetSupplierSchoolStandardsList", supplierIdParameter);
        }
    
        public virtual ObjectResult<usp_GetTempInventory_Result> usp_GetTempInventory(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTempInventory_Result>("usp_GetTempInventory", schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_GetTicketCategory_Result> usp_GetTicketCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketCategory_Result>("usp_GetTicketCategory");
        }
    
        public virtual ObjectResult<usp_GetTicketCategoryReport_Result> usp_GetTicketCategoryReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketCategoryReport_Result>("usp_GetTicketCategoryReport");
        }
    
        public virtual ObjectResult<usp_GetTicketPriority_Result> usp_GetTicketPriority()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketPriority_Result>("usp_GetTicketPriority");
        }
    
        public virtual ObjectResult<usp_GetTicketPriorityReport_Result> usp_GetTicketPriorityReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketPriorityReport_Result>("usp_GetTicketPriorityReport");
        }
    
        public virtual ObjectResult<usp_GetTicketSource_Result> usp_GetTicketSource()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketSource_Result>("usp_GetTicketSource");
        }
    
        public virtual ObjectResult<usp_GetTicketSourceReport_Result> usp_GetTicketSourceReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketSourceReport_Result>("usp_GetTicketSourceReport");
        }
    
        public virtual ObjectResult<usp_GetTicketStatus_Result> usp_GetTicketStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketStatus_Result>("usp_GetTicketStatus");
        }
    
        public virtual ObjectResult<usp_GetTicketStatusReport_Result> usp_GetTicketStatusReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTicketStatusReport_Result>("usp_GetTicketStatusReport");
        }
    
        public virtual ObjectResult<usp_GetTopMostSellingProducts_Result> usp_GetTopMostSellingProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTopMostSellingProducts_Result>("usp_GetTopMostSellingProducts");
        }
    
        public virtual ObjectResult<usp_GetUndeliveredAttempts_Result> usp_GetUndeliveredAttempts(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUndeliveredAttempts_Result>("usp_GetUndeliveredAttempts", orderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetUndeliveredProducts_Result> usp_GetUndeliveredProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUndeliveredProducts_Result>("usp_GetUndeliveredProducts");
        }
    
        public virtual ObjectResult<usp_GetUploadedEBooksList_Result> usp_GetUploadedEBooksList(Nullable<int> publisherId, Nullable<int> lastId)
        {
            var publisherIdParameter = publisherId.HasValue ?
                new ObjectParameter("PublisherId", publisherId) :
                new ObjectParameter("PublisherId", typeof(int));
    
            var lastIdParameter = lastId.HasValue ?
                new ObjectParameter("LastId", lastId) :
                new ObjectParameter("LastId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUploadedEBooksList_Result>("usp_GetUploadedEBooksList", publisherIdParameter, lastIdParameter);
        }
    
        public virtual ObjectResult<usp_GetYearList_Result> usp_GetYearList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetYearList_Result>("usp_GetYearList");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_insert_Refund_Details(Nullable<int> orderId, Nullable<decimal> amount, string pGRefundId, string refundNote)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var pGRefundIdParameter = pGRefundId != null ?
                new ObjectParameter("PGRefundId", pGRefundId) :
                new ObjectParameter("PGRefundId", typeof(string));
    
            var refundNoteParameter = refundNote != null ?
                new ObjectParameter("RefundNote", refundNote) :
                new ObjectParameter("RefundNote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_insert_Refund_Details", orderIdParameter, amountParameter, pGRefundIdParameter, refundNoteParameter);
        }
    
        public virtual ObjectResult<usp_InsertISBNProductDetails_Result> usp_InsertISBNProductDetails(string productName, string productDescription, Nullable<int> brandId, Nullable<decimal> actualPrice, string author, string warrantyPolicy, string replacementPolicy, Nullable<int> minAge, Nullable<int> maxAge, Nullable<double> discountPercent, string imagePath, Nullable<int> productTypeId, Nullable<int> inventoryCount, Nullable<double> sGst, Nullable<double> cGst, Nullable<double> iGst, Nullable<int> supplierId, string productDeliveryNote, string boardId, string schoolId, Nullable<double> schoolComissionPercent, Nullable<double> schoolComissionPrice, string standardId, string iSBN_13, Nullable<int> categoryMappingSubCategoryId, Nullable<int> extraInt1, Nullable<int> extraInt2, string extraString1, string extraString2, string height, string iSBN_10, string pageCount, string thickness, string width, string webReadLink)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var actualPriceParameter = actualPrice.HasValue ?
                new ObjectParameter("ActualPrice", actualPrice) :
                new ObjectParameter("ActualPrice", typeof(decimal));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var warrantyPolicyParameter = warrantyPolicy != null ?
                new ObjectParameter("WarrantyPolicy", warrantyPolicy) :
                new ObjectParameter("WarrantyPolicy", typeof(string));
    
            var replacementPolicyParameter = replacementPolicy != null ?
                new ObjectParameter("ReplacementPolicy", replacementPolicy) :
                new ObjectParameter("ReplacementPolicy", typeof(string));
    
            var minAgeParameter = minAge.HasValue ?
                new ObjectParameter("MinAge", minAge) :
                new ObjectParameter("MinAge", typeof(int));
    
            var maxAgeParameter = maxAge.HasValue ?
                new ObjectParameter("MaxAge", maxAge) :
                new ObjectParameter("MaxAge", typeof(int));
    
            var discountPercentParameter = discountPercent.HasValue ?
                new ObjectParameter("DiscountPercent", discountPercent) :
                new ObjectParameter("DiscountPercent", typeof(double));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var inventoryCountParameter = inventoryCount.HasValue ?
                new ObjectParameter("InventoryCount", inventoryCount) :
                new ObjectParameter("InventoryCount", typeof(int));
    
            var sGstParameter = sGst.HasValue ?
                new ObjectParameter("SGst", sGst) :
                new ObjectParameter("SGst", typeof(double));
    
            var cGstParameter = cGst.HasValue ?
                new ObjectParameter("CGst", cGst) :
                new ObjectParameter("CGst", typeof(double));
    
            var iGstParameter = iGst.HasValue ?
                new ObjectParameter("IGst", iGst) :
                new ObjectParameter("IGst", typeof(double));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var productDeliveryNoteParameter = productDeliveryNote != null ?
                new ObjectParameter("ProductDeliveryNote", productDeliveryNote) :
                new ObjectParameter("ProductDeliveryNote", typeof(string));
    
            var boardIdParameter = boardId != null ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var schoolComissionPercentParameter = schoolComissionPercent.HasValue ?
                new ObjectParameter("SchoolComissionPercent", schoolComissionPercent) :
                new ObjectParameter("SchoolComissionPercent", typeof(double));
    
            var schoolComissionPriceParameter = schoolComissionPrice.HasValue ?
                new ObjectParameter("SchoolComissionPrice", schoolComissionPrice) :
                new ObjectParameter("SchoolComissionPrice", typeof(double));
    
            var standardIdParameter = standardId != null ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(string));
    
            var iSBN_13Parameter = iSBN_13 != null ?
                new ObjectParameter("ISBN_13", iSBN_13) :
                new ObjectParameter("ISBN_13", typeof(string));
    
            var categoryMappingSubCategoryIdParameter = categoryMappingSubCategoryId.HasValue ?
                new ObjectParameter("CategoryMappingSubCategoryId", categoryMappingSubCategoryId) :
                new ObjectParameter("CategoryMappingSubCategoryId", typeof(int));
    
            var extraInt1Parameter = extraInt1.HasValue ?
                new ObjectParameter("ExtraInt1", extraInt1) :
                new ObjectParameter("ExtraInt1", typeof(int));
    
            var extraInt2Parameter = extraInt2.HasValue ?
                new ObjectParameter("ExtraInt2", extraInt2) :
                new ObjectParameter("ExtraInt2", typeof(int));
    
            var extraString1Parameter = extraString1 != null ?
                new ObjectParameter("ExtraString1", extraString1) :
                new ObjectParameter("ExtraString1", typeof(string));
    
            var extraString2Parameter = extraString2 != null ?
                new ObjectParameter("ExtraString2", extraString2) :
                new ObjectParameter("ExtraString2", typeof(string));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var iSBN_10Parameter = iSBN_10 != null ?
                new ObjectParameter("ISBN_10", iSBN_10) :
                new ObjectParameter("ISBN_10", typeof(string));
    
            var pageCountParameter = pageCount != null ?
                new ObjectParameter("PageCount", pageCount) :
                new ObjectParameter("PageCount", typeof(string));
    
            var thicknessParameter = thickness != null ?
                new ObjectParameter("Thickness", thickness) :
                new ObjectParameter("Thickness", typeof(string));
    
            var widthParameter = width != null ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(string));
    
            var webReadLinkParameter = webReadLink != null ?
                new ObjectParameter("WebReadLink", webReadLink) :
                new ObjectParameter("WebReadLink", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsertISBNProductDetails_Result>("usp_InsertISBNProductDetails", productNameParameter, productDescriptionParameter, brandIdParameter, actualPriceParameter, authorParameter, warrantyPolicyParameter, replacementPolicyParameter, minAgeParameter, maxAgeParameter, discountPercentParameter, imagePathParameter, productTypeIdParameter, inventoryCountParameter, sGstParameter, cGstParameter, iGstParameter, supplierIdParameter, productDeliveryNoteParameter, boardIdParameter, schoolIdParameter, schoolComissionPercentParameter, schoolComissionPriceParameter, standardIdParameter, iSBN_13Parameter, categoryMappingSubCategoryIdParameter, extraInt1Parameter, extraInt2Parameter, extraString1Parameter, extraString2Parameter, heightParameter, iSBN_10Parameter, pageCountParameter, thicknessParameter, widthParameter, webReadLinkParameter);
        }
    
        public virtual ObjectResult<string> usp_InsertOrder_Mapping_Undelivered_Reason(Nullable<int> orderId, Nullable<int> undelivered_ReasonId, Nullable<int> userId, string comment)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var undelivered_ReasonIdParameter = undelivered_ReasonId.HasValue ?
                new ObjectParameter("Undelivered_ReasonId", undelivered_ReasonId) :
                new ObjectParameter("Undelivered_ReasonId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_InsertOrder_Mapping_Undelivered_Reason", orderIdParameter, undelivered_ReasonIdParameter, userIdParameter, commentParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_InsertOrUpdatePackageMappingProducts(Nullable<int> productId, Nullable<int> packageId, Nullable<int> quantity, Nullable<bool> productStatus, Nullable<bool> isMandatoryFlag, Nullable<int> maxPurchaseLimit, Nullable<int> minPurchaseLimit, Nullable<bool> changeQuantityFlag)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var productStatusParameter = productStatus.HasValue ?
                new ObjectParameter("ProductStatus", productStatus) :
                new ObjectParameter("ProductStatus", typeof(bool));
    
            var isMandatoryFlagParameter = isMandatoryFlag.HasValue ?
                new ObjectParameter("IsMandatoryFlag", isMandatoryFlag) :
                new ObjectParameter("IsMandatoryFlag", typeof(bool));
    
            var maxPurchaseLimitParameter = maxPurchaseLimit.HasValue ?
                new ObjectParameter("MaxPurchaseLimit", maxPurchaseLimit) :
                new ObjectParameter("MaxPurchaseLimit", typeof(int));
    
            var minPurchaseLimitParameter = minPurchaseLimit.HasValue ?
                new ObjectParameter("MinPurchaseLimit", minPurchaseLimit) :
                new ObjectParameter("MinPurchaseLimit", typeof(int));
    
            var changeQuantityFlagParameter = changeQuantityFlag.HasValue ?
                new ObjectParameter("ChangeQuantityFlag", changeQuantityFlag) :
                new ObjectParameter("ChangeQuantityFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_InsertOrUpdatePackageMappingProducts", productIdParameter, packageIdParameter, quantityParameter, productStatusParameter, isMandatoryFlagParameter, maxPurchaseLimitParameter, minPurchaseLimitParameter, changeQuantityFlagParameter);
        }
    
        public virtual int usp_InsertPayNimoPayementDetails(Nullable<int> customerId, string merchantAdditionalDetails, string merchantTransactionIdentifier, string merchantTransactionRequestType, string responseType, string stringResponse, string transactionState, Nullable<int> bankSelectionCode, Nullable<double> amount, string statusCode, string identifier)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var merchantAdditionalDetailsParameter = merchantAdditionalDetails != null ?
                new ObjectParameter("merchantAdditionalDetails", merchantAdditionalDetails) :
                new ObjectParameter("merchantAdditionalDetails", typeof(string));
    
            var merchantTransactionIdentifierParameter = merchantTransactionIdentifier != null ?
                new ObjectParameter("merchantTransactionIdentifier", merchantTransactionIdentifier) :
                new ObjectParameter("merchantTransactionIdentifier", typeof(string));
    
            var merchantTransactionRequestTypeParameter = merchantTransactionRequestType != null ?
                new ObjectParameter("merchantTransactionRequestType", merchantTransactionRequestType) :
                new ObjectParameter("merchantTransactionRequestType", typeof(string));
    
            var responseTypeParameter = responseType != null ?
                new ObjectParameter("responseType", responseType) :
                new ObjectParameter("responseType", typeof(string));
    
            var stringResponseParameter = stringResponse != null ?
                new ObjectParameter("stringResponse", stringResponse) :
                new ObjectParameter("stringResponse", typeof(string));
    
            var transactionStateParameter = transactionState != null ?
                new ObjectParameter("transactionState", transactionState) :
                new ObjectParameter("transactionState", typeof(string));
    
            var bankSelectionCodeParameter = bankSelectionCode.HasValue ?
                new ObjectParameter("bankSelectionCode", bankSelectionCode) :
                new ObjectParameter("bankSelectionCode", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("statusCode", statusCode) :
                new ObjectParameter("statusCode", typeof(string));
    
            var identifierParameter = identifier != null ?
                new ObjectParameter("identifier", identifier) :
                new ObjectParameter("identifier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertPayNimoPayementDetails", customerIdParameter, merchantAdditionalDetailsParameter, merchantTransactionIdentifierParameter, merchantTransactionRequestTypeParameter, responseTypeParameter, stringResponseParameter, transactionStateParameter, bankSelectionCodeParameter, amountParameter, statusCodeParameter, identifierParameter);
        }
    
        public virtual ObjectResult<usp_InsertProductDetails_Result> usp_InsertProductDetails(string productName, string productDescription, Nullable<int> brandId, Nullable<decimal> actualPrice, string author, string warrantyPolicy, string replacementPolicy, Nullable<int> minAge, Nullable<int> maxAge, Nullable<double> discountPercent, string imagePath, Nullable<int> productTypeId, Nullable<int> inventoryCount, Nullable<double> sGst, Nullable<double> cGst, Nullable<double> iGst, Nullable<int> supplierId, string productDeliveryNote, Nullable<int> boardId, Nullable<int> schoolId, Nullable<double> schoolComissionPercent, Nullable<double> schoolComissionPrice, Nullable<int> standardId, string iSBN, Nullable<int> categoryMappingSubCategoryId, Nullable<int> extraInt1, Nullable<int> extraInt2, string extraString1, string extraString2)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var actualPriceParameter = actualPrice.HasValue ?
                new ObjectParameter("ActualPrice", actualPrice) :
                new ObjectParameter("ActualPrice", typeof(decimal));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var warrantyPolicyParameter = warrantyPolicy != null ?
                new ObjectParameter("WarrantyPolicy", warrantyPolicy) :
                new ObjectParameter("WarrantyPolicy", typeof(string));
    
            var replacementPolicyParameter = replacementPolicy != null ?
                new ObjectParameter("ReplacementPolicy", replacementPolicy) :
                new ObjectParameter("ReplacementPolicy", typeof(string));
    
            var minAgeParameter = minAge.HasValue ?
                new ObjectParameter("MinAge", minAge) :
                new ObjectParameter("MinAge", typeof(int));
    
            var maxAgeParameter = maxAge.HasValue ?
                new ObjectParameter("MaxAge", maxAge) :
                new ObjectParameter("MaxAge", typeof(int));
    
            var discountPercentParameter = discountPercent.HasValue ?
                new ObjectParameter("DiscountPercent", discountPercent) :
                new ObjectParameter("DiscountPercent", typeof(double));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var productTypeIdParameter = productTypeId.HasValue ?
                new ObjectParameter("ProductTypeId", productTypeId) :
                new ObjectParameter("ProductTypeId", typeof(int));
    
            var inventoryCountParameter = inventoryCount.HasValue ?
                new ObjectParameter("InventoryCount", inventoryCount) :
                new ObjectParameter("InventoryCount", typeof(int));
    
            var sGstParameter = sGst.HasValue ?
                new ObjectParameter("SGst", sGst) :
                new ObjectParameter("SGst", typeof(double));
    
            var cGstParameter = cGst.HasValue ?
                new ObjectParameter("CGst", cGst) :
                new ObjectParameter("CGst", typeof(double));
    
            var iGstParameter = iGst.HasValue ?
                new ObjectParameter("IGst", iGst) :
                new ObjectParameter("IGst", typeof(double));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var productDeliveryNoteParameter = productDeliveryNote != null ?
                new ObjectParameter("ProductDeliveryNote", productDeliveryNote) :
                new ObjectParameter("ProductDeliveryNote", typeof(string));
    
            var boardIdParameter = boardId.HasValue ?
                new ObjectParameter("BoardId", boardId) :
                new ObjectParameter("BoardId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var schoolComissionPercentParameter = schoolComissionPercent.HasValue ?
                new ObjectParameter("SchoolComissionPercent", schoolComissionPercent) :
                new ObjectParameter("SchoolComissionPercent", typeof(double));
    
            var schoolComissionPriceParameter = schoolComissionPrice.HasValue ?
                new ObjectParameter("SchoolComissionPrice", schoolComissionPrice) :
                new ObjectParameter("SchoolComissionPrice", typeof(double));
    
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var categoryMappingSubCategoryIdParameter = categoryMappingSubCategoryId.HasValue ?
                new ObjectParameter("CategoryMappingSubCategoryId", categoryMappingSubCategoryId) :
                new ObjectParameter("CategoryMappingSubCategoryId", typeof(int));
    
            var extraInt1Parameter = extraInt1.HasValue ?
                new ObjectParameter("ExtraInt1", extraInt1) :
                new ObjectParameter("ExtraInt1", typeof(int));
    
            var extraInt2Parameter = extraInt2.HasValue ?
                new ObjectParameter("ExtraInt2", extraInt2) :
                new ObjectParameter("ExtraInt2", typeof(int));
    
            var extraString1Parameter = extraString1 != null ?
                new ObjectParameter("ExtraString1", extraString1) :
                new ObjectParameter("ExtraString1", typeof(string));
    
            var extraString2Parameter = extraString2 != null ?
                new ObjectParameter("ExtraString2", extraString2) :
                new ObjectParameter("ExtraString2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsertProductDetails_Result>("usp_InsertProductDetails", productNameParameter, productDescriptionParameter, brandIdParameter, actualPriceParameter, authorParameter, warrantyPolicyParameter, replacementPolicyParameter, minAgeParameter, maxAgeParameter, discountPercentParameter, imagePathParameter, productTypeIdParameter, inventoryCountParameter, sGstParameter, cGstParameter, iGstParameter, supplierIdParameter, productDeliveryNoteParameter, boardIdParameter, schoolIdParameter, schoolComissionPercentParameter, schoolComissionPriceParameter, standardIdParameter, iSBNParameter, categoryMappingSubCategoryIdParameter, extraInt1Parameter, extraInt2Parameter, extraString1Parameter, extraString2Parameter);
        }
    
        public virtual int usp_InsertProductImageName(string oldImageName, string newImageName, string supplierName)
        {
            var oldImageNameParameter = oldImageName != null ?
                new ObjectParameter("OldImageName", oldImageName) :
                new ObjectParameter("OldImageName", typeof(string));
    
            var newImageNameParameter = newImageName != null ?
                new ObjectParameter("NewImageName", newImageName) :
                new ObjectParameter("NewImageName", typeof(string));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertProductImageName", oldImageNameParameter, newImageNameParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_InsertSMSDetails(Nullable<int> customerId, string mobileNumber, string sMS_Text, string sMS_ProviderId, string sMS_SendStatus)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("MobileNumber", mobileNumber) :
                new ObjectParameter("MobileNumber", typeof(string));
    
            var sMS_TextParameter = sMS_Text != null ?
                new ObjectParameter("SMS_Text", sMS_Text) :
                new ObjectParameter("SMS_Text", typeof(string));
    
            var sMS_ProviderIdParameter = sMS_ProviderId != null ?
                new ObjectParameter("SMS_ProviderId", sMS_ProviderId) :
                new ObjectParameter("SMS_ProviderId", typeof(string));
    
            var sMS_SendStatusParameter = sMS_SendStatus != null ?
                new ObjectParameter("SMS_SendStatus", sMS_SendStatus) :
                new ObjectParameter("SMS_SendStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_InsertSMSDetails", customerIdParameter, mobileNumberParameter, sMS_TextParameter, sMS_ProviderIdParameter, sMS_SendStatusParameter);
        }
    
        public virtual ObjectResult<usp_ManipulateOTP_Result> usp_ManipulateOTP(string mobileNumber)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("mobileNumber", mobileNumber) :
                new ObjectParameter("mobileNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManipulateOTP_Result>("usp_ManipulateOTP", mobileNumberParameter);
        }
    
        public virtual ObjectResult<usp_ManipulateOTPWithSchool_Result> usp_ManipulateOTPWithSchool(string mobileNumber, Nullable<int> schoolid)
        {
            var mobileNumberParameter = mobileNumber != null ?
                new ObjectParameter("mobileNumber", mobileNumber) :
                new ObjectParameter("mobileNumber", typeof(string));
    
            var schoolidParameter = schoolid.HasValue ?
                new ObjectParameter("schoolid", schoolid) :
                new ObjectParameter("schoolid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ManipulateOTPWithSchool_Result>("usp_ManipulateOTPWithSchool", mobileNumberParameter, schoolidParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_MapCouponWithOrder(Nullable<int> coupon_Mapping_OrderId, Nullable<int> orderId)
        {
            var coupon_Mapping_OrderIdParameter = coupon_Mapping_OrderId.HasValue ?
                new ObjectParameter("Coupon_Mapping_OrderId", coupon_Mapping_OrderId) :
                new ObjectParameter("Coupon_Mapping_OrderId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_MapCouponWithOrder", coupon_Mapping_OrderIdParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<usp_NewOrdersAndPendingProductReport_Result> usp_NewOrdersAndPendingProductReport(Nullable<int> schoolId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NewOrdersAndPendingProductReport_Result>("usp_NewOrdersAndPendingProductReport", schoolIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_Package_Mapping_Shipping_Cost_Result> usp_Package_Mapping_Shipping_Cost(string type, Nullable<int> packageId, Nullable<decimal> shippingCost, Nullable<int> package_Mapping_ShippingCostId, Nullable<int> schoolId)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var shippingCostParameter = shippingCost.HasValue ?
                new ObjectParameter("ShippingCost", shippingCost) :
                new ObjectParameter("ShippingCost", typeof(decimal));
    
            var package_Mapping_ShippingCostIdParameter = package_Mapping_ShippingCostId.HasValue ?
                new ObjectParameter("Package_Mapping_ShippingCostId", package_Mapping_ShippingCostId) :
                new ObjectParameter("Package_Mapping_ShippingCostId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Package_Mapping_Shipping_Cost_Result>("usp_Package_Mapping_Shipping_Cost", typeParameter, packageIdParameter, shippingCostParameter, package_Mapping_ShippingCostIdParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<usp_RegisterStudent_Result> usp_RegisterStudent(string rollNo, string firstName, string middleName, string lastName, string emailId, string mobileNo, string division, string studentId, Nullable<int> standardId, Nullable<int> schoolId, Nullable<bool> useSchooAddressFlag)
        {
            var rollNoParameter = rollNo != null ?
                new ObjectParameter("RollNo", rollNo) :
                new ObjectParameter("RollNo", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var divisionParameter = division != null ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var standardIdParameter = standardId.HasValue ?
                new ObjectParameter("StandardId", standardId) :
                new ObjectParameter("StandardId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var useSchooAddressFlagParameter = useSchooAddressFlag.HasValue ?
                new ObjectParameter("UseSchooAddressFlag", useSchooAddressFlag) :
                new ObjectParameter("UseSchooAddressFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RegisterStudent_Result>("usp_RegisterStudent", rollNoParameter, firstNameParameter, middleNameParameter, lastNameParameter, emailIdParameter, mobileNoParameter, divisionParameter, studentIdParameter, standardIdParameter, schoolIdParameter, useSchooAddressFlagParameter);
        }
    
        public virtual ObjectResult<usp_RunnerBoyLogin_Result> usp_RunnerBoyLogin(string username, string password, string systemIp)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var systemIpParameter = systemIp != null ?
                new ObjectParameter("SystemIp", systemIp) :
                new ObjectParameter("SystemIp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RunnerBoyLogin_Result>("usp_RunnerBoyLogin", usernameParameter, passwordParameter, systemIpParameter);
        }
    
        public virtual ObjectResult<usp_SearchOrder_Result> usp_SearchOrder(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SearchOrder_Result>("usp_SearchOrder", searchStringParameter);
        }
    
        public virtual ObjectResult<usp_SearchTickets_Result> usp_SearchTickets(string searchstring)
        {
            var searchstringParameter = searchstring != null ?
                new ObjectParameter("Searchstring", searchstring) :
                new ObjectParameter("Searchstring", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SearchTickets_Result>("usp_SearchTickets", searchstringParameter);
        }
    
        public virtual ObjectResult<usp_SendMeAppLink_Result> usp_SendMeAppLink(string mobilenumber)
        {
            var mobilenumberParameter = mobilenumber != null ?
                new ObjectParameter("mobilenumber", mobilenumber) :
                new ObjectParameter("mobilenumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SendMeAppLink_Result>("usp_SendMeAppLink", mobilenumberParameter);
        }
    
        public virtual ObjectResult<string> usp_UpdateConsignmentToRunnerBoy(Nullable<int> orderId, Nullable<int> userId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UpdateConsignmentToRunnerBoy", orderIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_UpdateOrderProductAvailability(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_UpdateOrderProductAvailability", orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_UpdatePurchaseFromMarketFlag(Nullable<int> packageMappingProductId, Nullable<bool> purchaseFromMarketFlag)
        {
            var packageMappingProductIdParameter = packageMappingProductId.HasValue ?
                new ObjectParameter("PackageMappingProductId", packageMappingProductId) :
                new ObjectParameter("PackageMappingProductId", typeof(int));
    
            var purchaseFromMarketFlagParameter = purchaseFromMarketFlag.HasValue ?
                new ObjectParameter("PurchaseFromMarketFlag", purchaseFromMarketFlag) :
                new ObjectParameter("PurchaseFromMarketFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_UpdatePurchaseFromMarketFlag", packageMappingProductIdParameter, purchaseFromMarketFlagParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_UpdateTicket(Nullable<int> ticketId, string description, Nullable<int> orderId, Nullable<int> ticketCategoryId, Nullable<int> ticketPriorityId, Nullable<int> ticketSourceId, Nullable<int> ticketStatusId, Nullable<int> userId)
        {
            var ticketIdParameter = ticketId.HasValue ?
                new ObjectParameter("TicketId", ticketId) :
                new ObjectParameter("TicketId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var ticketCategoryIdParameter = ticketCategoryId.HasValue ?
                new ObjectParameter("TicketCategoryId", ticketCategoryId) :
                new ObjectParameter("TicketCategoryId", typeof(int));
    
            var ticketPriorityIdParameter = ticketPriorityId.HasValue ?
                new ObjectParameter("TicketPriorityId", ticketPriorityId) :
                new ObjectParameter("TicketPriorityId", typeof(int));
    
            var ticketSourceIdParameter = ticketSourceId.HasValue ?
                new ObjectParameter("TicketSourceId", ticketSourceId) :
                new ObjectParameter("TicketSourceId", typeof(int));
    
            var ticketStatusIdParameter = ticketStatusId.HasValue ?
                new ObjectParameter("TicketStatusId", ticketStatusId) :
                new ObjectParameter("TicketStatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_UpdateTicket", ticketIdParameter, descriptionParameter, orderIdParameter, ticketCategoryIdParameter, ticketPriorityIdParameter, ticketSourceIdParameter, ticketStatusIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<usp_VerifyCoupon_Result> usp_VerifyCoupon(Nullable<int> customerId, string couponCode, Nullable<decimal> orderAmount, Nullable<int> productsInOrder)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var couponCodeParameter = couponCode != null ?
                new ObjectParameter("CouponCode", couponCode) :
                new ObjectParameter("CouponCode", typeof(string));
    
            var orderAmountParameter = orderAmount.HasValue ?
                new ObjectParameter("OrderAmount", orderAmount) :
                new ObjectParameter("OrderAmount", typeof(decimal));
    
            var productsInOrderParameter = productsInOrder.HasValue ?
                new ObjectParameter("ProductsInOrder", productsInOrder) :
                new ObjectParameter("ProductsInOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_VerifyCoupon_Result>("usp_VerifyCoupon", customerIdParameter, couponCodeParameter, orderAmountParameter, productsInOrderParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> usp_VerifyOrderPlacedAgainstTransaction(string transactionRefNo)
        {
            var transactionRefNoParameter = transactionRefNo != null ?
                new ObjectParameter("TransactionRefNo", transactionRefNo) :
                new ObjectParameter("TransactionRefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("usp_VerifyOrderPlacedAgainstTransaction", transactionRefNoParameter);
        }
    
        public virtual ObjectResult<usp_VerifyUserLogin_Result> usp_VerifyUserLogin(string username, string pasword, string loginIp)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var paswordParameter = pasword != null ?
                new ObjectParameter("Pasword", pasword) :
                new ObjectParameter("Pasword", typeof(string));
    
            var loginIpParameter = loginIp != null ?
                new ObjectParameter("LoginIp", loginIp) :
                new ObjectParameter("LoginIp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_VerifyUserLogin_Result>("usp_VerifyUserLogin", usernameParameter, paswordParameter, loginIpParameter);
        }
    }
}
